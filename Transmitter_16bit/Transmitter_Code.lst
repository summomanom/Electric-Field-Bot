0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Thu Mar 22 20:29:01 2018
0000              5   ;--------------------------------------------------------
                  5   $name Transmitter_Code
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _InitPinADC_PARM_2
0000             27            public _main
0000             28            public _sendMessage
0000             29            public _sendCommand
0000             30            public _sendOne
0000             31            public _sendZero
0000             32            public _Volts_at_Pin
0000             33            public _ADC_at_Pin
0000             34            public _InitPinADC
0000             35            public _InitADC
0000             36            public _Timer2_ISR
0000             37            public _waitms
0000             38            public _Timer3us
0000             39            public __c51_external_startup
0000             40            public _on_off
0000             41            public _sendMessage_PARM_4
0000             42            public _sendMessage_PARM_3
0000             43            public _sendMessage_PARM_2
0000             44            public _overflow_count
0000             45   ;--------------------------------------------------------
0000             46   ; Special Function Registers
0000             47   ;--------------------------------------------------------
0000             48   _ACC            DATA 0xe0
0000             49   _ADC0ASAH       DATA 0xb6
0000             50   _ADC0ASAL       DATA 0xb5
0000             51   _ADC0ASCF       DATA 0xa1
0000             52   _ADC0ASCT       DATA 0xc7
0000             53   _ADC0CF0        DATA 0xbc
0000             54   _ADC0CF1        DATA 0xb9
0000             55   _ADC0CF2        DATA 0xdf
0000             56   _ADC0CN0        DATA 0xe8
0000             57   _ADC0CN1        DATA 0xb2
0000             58   _ADC0CN2        DATA 0xb3
0000             59   _ADC0GTH        DATA 0xc4
0000             60   _ADC0GTL        DATA 0xc3
0000             61   _ADC0H          DATA 0xbe
0000             62   _ADC0L          DATA 0xbd
0000             63   _ADC0LTH        DATA 0xc6
0000             64   _ADC0LTL        DATA 0xc5
0000             65   _ADC0MX         DATA 0xbb
0000             66   _B              DATA 0xf0
0000             67   _CKCON0         DATA 0x8e
0000             68   _CKCON1         DATA 0xa6
0000             69   _CLEN0          DATA 0xc6
0000             70   _CLIE0          DATA 0xc7
0000             71   _CLIF0          DATA 0xe8
0000             72   _CLKSEL         DATA 0xa9
0000             73   _CLOUT0         DATA 0xd1
0000             74   _CLU0CF         DATA 0xb1
0000             75   _CLU0FN         DATA 0xaf
0000             76   _CLU0MX         DATA 0x84
0000             77   _CLU1CF         DATA 0xb3
0000             78   _CLU1FN         DATA 0xb2
0000             79   _CLU1MX         DATA 0x85
0000             80   _CLU2CF         DATA 0xb6
0000             81   _CLU2FN         DATA 0xb5
0000             82   _CLU2MX         DATA 0x91
0000             83   _CLU3CF         DATA 0xbf
0000             84   _CLU3FN         DATA 0xbe
0000             85   _CLU3MX         DATA 0xae
0000             86   _CMP0CN0        DATA 0x9b
0000             87   _CMP0CN1        DATA 0x99
0000             88   _CMP0MD         DATA 0x9d
0000             89   _CMP0MX         DATA 0x9f
0000             90   _CMP1CN0        DATA 0xbf
0000             91   _CMP1CN1        DATA 0xac
0000             92   _CMP1MD         DATA 0xab
0000             93   _CMP1MX         DATA 0xaa
0000             94   _CRC0CN0        DATA 0xce
0000             95   _CRC0CN1        DATA 0x86
0000             96   _CRC0CNT        DATA 0xd3
0000             97   _CRC0DAT        DATA 0xcb
0000             98   _CRC0FLIP       DATA 0xcf
0000             99   _CRC0IN         DATA 0xca
0000            100   _CRC0ST         DATA 0xd2
0000            101   _DAC0CF0        DATA 0x91
0000            102   _DAC0CF1        DATA 0x92
0000            103   _DAC0H          DATA 0x85
0000            104   _DAC0L          DATA 0x84
0000            105   _DAC1CF0        DATA 0x93
0000            106   _DAC1CF1        DATA 0x94
0000            107   _DAC1H          DATA 0x8a
0000            108   _DAC1L          DATA 0x89
0000            109   _DAC2CF0        DATA 0x95
0000            110   _DAC2CF1        DATA 0x96
0000            111   _DAC2H          DATA 0x8c
0000            112   _DAC2L          DATA 0x8b
0000            113   _DAC3CF0        DATA 0x9a
0000            114   _DAC3CF1        DATA 0x9c
0000            115   _DAC3H          DATA 0x8e
0000            116   _DAC3L          DATA 0x8d
0000            117   _DACGCF0        DATA 0x88
0000            118   _DACGCF1        DATA 0x98
0000            119   _DACGCF2        DATA 0xa2
0000            120   _DERIVID        DATA 0xad
0000            121   _DEVICEID       DATA 0xb5
0000            122   _DPH            DATA 0x83
0000            123   _DPL            DATA 0x82
0000            124   _EIE1           DATA 0xe6
0000            125   _EIE2           DATA 0xf3
0000            126   _EIP1           DATA 0xbb
0000            127   _EIP1H          DATA 0xee
0000            128   _EIP2           DATA 0xed
0000            129   _EIP2H          DATA 0xf6
0000            130   _EMI0CN         DATA 0xe7
0000            131   _FLKEY          DATA 0xb7
0000            132   _HFO0CAL        DATA 0xc7
0000            133   _HFO1CAL        DATA 0xd6
0000            134   _HFOCN          DATA 0xef
0000            135   _I2C0ADM        DATA 0xff
0000            136   _I2C0CN0        DATA 0xba
0000            137   _I2C0DIN        DATA 0xbc
0000            138   _I2C0DOUT       DATA 0xbb
0000            139   _I2C0FCN0       DATA 0xad
0000            140   _I2C0FCN1       DATA 0xab
0000            141   _I2C0FCT        DATA 0xf5
0000            142   _I2C0SLAD       DATA 0xbd
0000            143   _I2C0STAT       DATA 0xb9
0000            144   _IE             DATA 0xa8
0000            145   _IP             DATA 0xb8
0000            146   _IPH            DATA 0xf2
0000            147   _IT01CF         DATA 0xe4
0000            148   _LFO0CN         DATA 0xb1
0000            149   _P0             DATA 0x80
0000            150   _P0MASK         DATA 0xfe
0000            151   _P0MAT          DATA 0xfd
0000            152   _P0MDIN         DATA 0xf1
0000            153   _P0MDOUT        DATA 0xa4
0000            154   _P0SKIP         DATA 0xd4
0000            155   _P1             DATA 0x90
0000            156   _P1MASK         DATA 0xee
0000            157   _P1MAT          DATA 0xed
0000            158   _P1MDIN         DATA 0xf2
0000            159   _P1MDOUT        DATA 0xa5
0000            160   _P1SKIP         DATA 0xd5
0000            161   _P2             DATA 0xa0
0000            162   _P2MASK         DATA 0xfc
0000            163   _P2MAT          DATA 0xfb
0000            164   _P2MDIN         DATA 0xf3
0000            165   _P2MDOUT        DATA 0xa6
0000            166   _P2SKIP         DATA 0xcc
0000            167   _P3             DATA 0xb0
0000            168   _P3MDIN         DATA 0xf4
0000            169   _P3MDOUT        DATA 0x9c
0000            170   _PCA0CENT       DATA 0x9e
0000            171   _PCA0CLR        DATA 0x9c
0000            172   _PCA0CN0        DATA 0xd8
0000            173   _PCA0CPH0       DATA 0xfc
0000            174   _PCA0CPH1       DATA 0xea
0000            175   _PCA0CPH2       DATA 0xec
0000            176   _PCA0CPH3       DATA 0xf5
0000            177   _PCA0CPH4       DATA 0x85
0000            178   _PCA0CPH5       DATA 0xde
0000            179   _PCA0CPL0       DATA 0xfb
0000            180   _PCA0CPL1       DATA 0xe9
0000            181   _PCA0CPL2       DATA 0xeb
0000            182   _PCA0CPL3       DATA 0xf4
0000            183   _PCA0CPL4       DATA 0x84
0000            184   _PCA0CPL5       DATA 0xdd
0000            185   _PCA0CPM0       DATA 0xda
0000            186   _PCA0CPM1       DATA 0xdb
0000            187   _PCA0CPM2       DATA 0xdc
0000            188   _PCA0CPM3       DATA 0xae
0000            189   _PCA0CPM4       DATA 0xaf
0000            190   _PCA0CPM5       DATA 0xcc
0000            191   _PCA0H          DATA 0xfa
0000            192   _PCA0L          DATA 0xf9
0000            193   _PCA0MD         DATA 0xd9
0000            194   _PCA0POL        DATA 0x96
0000            195   _PCA0PWM        DATA 0xf7
0000            196   _PCON0          DATA 0x87
0000            197   _PCON1          DATA 0xcd
0000            198   _PFE0CN         DATA 0xc1
0000            199   _PRTDRV         DATA 0xf6
0000            200   _PSCTL          DATA 0x8f
0000            201   _PSTAT0         DATA 0xaa
0000            202   _PSW            DATA 0xd0
0000            203   _REF0CN         DATA 0xd1
0000            204   _REG0CN         DATA 0xc9
0000            205   _REVID          DATA 0xb6
0000            206   _RSTSRC         DATA 0xef
0000            207   _SBCON1         DATA 0x94
0000            208   _SBRLH1         DATA 0x96
0000            209   _SBRLL1         DATA 0x95
0000            210   _SBUF           DATA 0x99
0000            211   _SBUF0          DATA 0x99
0000            212   _SBUF1          DATA 0x92
0000            213   _SCON           DATA 0x98
0000            214   _SCON0          DATA 0x98
0000            215   _SCON1          DATA 0xc8
0000            216   _SFRPAGE        DATA 0xa7
0000            217   _SFRPGCN        DATA 0xbc
0000            218   _SFRSTACK       DATA 0xd7
0000            219   _SMB0ADM        DATA 0xd6
0000            220   _SMB0ADR        DATA 0xd7
0000            221   _SMB0CF         DATA 0xc1
0000            222   _SMB0CN0        DATA 0xc0
0000            223   _SMB0DAT        DATA 0xc2
0000            224   _SMB0FCN0       DATA 0xc3
0000            225   _SMB0FCN1       DATA 0xc4
0000            226   _SMB0FCT        DATA 0xef
0000            227   _SMB0RXLN       DATA 0xc5
0000            228   _SMB0TC         DATA 0xac
0000            229   _SMOD1          DATA 0x93
0000            230   _SP             DATA 0x81
0000            231   _SPI0CFG        DATA 0xa1
0000            232   _SPI0CKR        DATA 0xa2
0000            233   _SPI0CN0        DATA 0xf8
0000            234   _SPI0DAT        DATA 0xa3
0000            235   _SPI0FCN0       DATA 0x9a
0000            236   _SPI0FCN1       DATA 0x9b
0000            237   _SPI0FCT        DATA 0xf7
0000            238   _SPI0PCF        DATA 0xdf
0000            239   _TCON           DATA 0x88
0000            240   _TH0            DATA 0x8c
0000            241   _TH1            DATA 0x8d
0000            242   _TL0            DATA 0x8a
0000            243   _TL1            DATA 0x8b
0000            244   _TMOD           DATA 0x89
0000            245   _TMR2CN0        DATA 0xc8
0000            246   _TMR2CN1        DATA 0xfd
0000            247   _TMR2H          DATA 0xcf
0000            248   _TMR2L          DATA 0xce
0000            249   _TMR2RLH        DATA 0xcb
0000            250   _TMR2RLL        DATA 0xca
0000            251   _TMR3CN0        DATA 0x91
0000            252   _TMR3CN1        DATA 0xfe
0000            253   _TMR3H          DATA 0x95
0000            254   _TMR3L          DATA 0x94
0000            255   _TMR3RLH        DATA 0x93
0000            256   _TMR3RLL        DATA 0x92
0000            257   _TMR4CN0        DATA 0x98
0000            258   _TMR4CN1        DATA 0xff
0000            259   _TMR4H          DATA 0xa5
0000            260   _TMR4L          DATA 0xa4
0000            261   _TMR4RLH        DATA 0xa3
0000            262   _TMR4RLL        DATA 0xa2
0000            263   _TMR5CN0        DATA 0xc0
0000            264   _TMR5CN1        DATA 0xf1
0000            265   _TMR5H          DATA 0xd5
0000            266   _TMR5L          DATA 0xd4
0000            267   _TMR5RLH        DATA 0xd3
0000            268   _TMR5RLL        DATA 0xd2
0000            269   _UART0PCF       DATA 0xd9
0000            270   _UART1FCN0      DATA 0x9d
0000            271   _UART1FCN1      DATA 0xd8
0000            272   _UART1FCT       DATA 0xfa
0000            273   _UART1LIN       DATA 0x9e
0000            274   _UART1PCF       DATA 0xda
0000            275   _VDM0CN         DATA 0xff
0000            276   _WDTCN          DATA 0x97
0000            277   _XBR0           DATA 0xe1
0000            278   _XBR1           DATA 0xe2
0000            279   _XBR2           DATA 0xe3
0000            280   _XOSC0CN        DATA 0x86
0000            281   _DPTR           DATA 0x8382
0000            282   _TMR2RL         DATA 0xcbca
0000            283   _TMR3RL         DATA 0x9392
0000            284   _TMR4RL         DATA 0xa3a2
0000            285   _TMR5RL         DATA 0xd3d2
0000            286   _TMR0           DATA 0x8c8a
0000            287   _TMR1           DATA 0x8d8b
0000            288   _TMR2           DATA 0xcfce
0000            289   _TMR3           DATA 0x9594
0000            290   _TMR4           DATA 0xa5a4
0000            291   _TMR5           DATA 0xd5d4
0000            292   _SBRL1          DATA 0x9695
0000            293   _PCA0           DATA 0xfaf9
0000            294   _PCA0CP0        DATA 0xfcfb
0000            295   _PCA0CP1        DATA 0xeae9
0000            296   _PCA0CP2        DATA 0xeceb
0000            297   _PCA0CP3        DATA 0xf5f4
0000            298   _PCA0CP4        DATA 0x8584
0000            299   _PCA0CP5        DATA 0xdedd
0000            300   _ADC0ASA        DATA 0xb6b5
0000            301   _ADC0GT         DATA 0xc4c3
0000            302   _ADC0           DATA 0xbebd
0000            303   _ADC0LT         DATA 0xc6c5
0000            304   _DAC0           DATA 0x8584
0000            305   _DAC1           DATA 0x8a89
0000            306   _DAC2           DATA 0x8c8b
0000            307   _DAC3           DATA 0x8e8d
0000            308   ;--------------------------------------------------------
0000            309   ; special function bits
0000            310   ;--------------------------------------------------------
0000            311   _ACC_0          BIT 0xe0
0000            312   _ACC_1          BIT 0xe1
0000            313   _ACC_2          BIT 0xe2
0000            314   _ACC_3          BIT 0xe3
0000            315   _ACC_4          BIT 0xe4
0000            316   _ACC_5          BIT 0xe5
0000            317   _ACC_6          BIT 0xe6
0000            318   _ACC_7          BIT 0xe7
0000            319   _TEMPE          BIT 0xe8
0000            320   _ADGN0          BIT 0xe9
0000            321   _ADGN1          BIT 0xea
0000            322   _ADWINT         BIT 0xeb
0000            323   _ADBUSY         BIT 0xec
0000            324   _ADINT          BIT 0xed
0000            325   _IPOEN          BIT 0xee
0000            326   _ADEN           BIT 0xef
0000            327   _B_0            BIT 0xf0
0000            328   _B_1            BIT 0xf1
0000            329   _B_2            BIT 0xf2
0000            330   _B_3            BIT 0xf3
0000            331   _B_4            BIT 0xf4
0000            332   _B_5            BIT 0xf5
0000            333   _B_6            BIT 0xf6
0000            334   _B_7            BIT 0xf7
0000            335   _C0FIF          BIT 0xe8
0000            336   _C0RIF          BIT 0xe9
0000            337   _C1FIF          BIT 0xea
0000            338   _C1RIF          BIT 0xeb
0000            339   _C2FIF          BIT 0xec
0000            340   _C2RIF          BIT 0xed
0000            341   _C3FIF          BIT 0xee
0000            342   _C3RIF          BIT 0xef
0000            343   _D1SRC0         BIT 0x88
0000            344   _D1SRC1         BIT 0x89
0000            345   _D1AMEN         BIT 0x8a
0000            346   _D01REFSL       BIT 0x8b
0000            347   _D3SRC0         BIT 0x8c
0000            348   _D3SRC1         BIT 0x8d
0000            349   _D3AMEN         BIT 0x8e
0000            350   _D23REFSL       BIT 0x8f
0000            351   _D0UDIS         BIT 0x98
0000            352   _D1UDIS         BIT 0x99
0000            353   _D2UDIS         BIT 0x9a
0000            354   _D3UDIS         BIT 0x9b
0000            355   _EX0            BIT 0xa8
0000            356   _ET0            BIT 0xa9
0000            357   _EX1            BIT 0xaa
0000            358   _ET1            BIT 0xab
0000            359   _ES0            BIT 0xac
0000            360   _ET2            BIT 0xad
0000            361   _ESPI0          BIT 0xae
0000            362   _EA             BIT 0xaf
0000            363   _PX0            BIT 0xb8
0000            364   _PT0            BIT 0xb9
0000            365   _PX1            BIT 0xba
0000            366   _PT1            BIT 0xbb
0000            367   _PS0            BIT 0xbc
0000            368   _PT2            BIT 0xbd
0000            369   _PSPI0          BIT 0xbe
0000            370   _P0_0           BIT 0x80
0000            371   _P0_1           BIT 0x81
0000            372   _P0_2           BIT 0x82
0000            373   _P0_3           BIT 0x83
0000            374   _P0_4           BIT 0x84
0000            375   _P0_5           BIT 0x85
0000            376   _P0_6           BIT 0x86
0000            377   _P0_7           BIT 0x87
0000            378   _P1_0           BIT 0x90
0000            379   _P1_1           BIT 0x91
0000            380   _P1_2           BIT 0x92
0000            381   _P1_3           BIT 0x93
0000            382   _P1_4           BIT 0x94
0000            383   _P1_5           BIT 0x95
0000            384   _P1_6           BIT 0x96
0000            385   _P1_7           BIT 0x97
0000            386   _P2_0           BIT 0xa0
0000            387   _P2_1           BIT 0xa1
0000            388   _P2_2           BIT 0xa2
0000            389   _P2_3           BIT 0xa3
0000            390   _P2_4           BIT 0xa4
0000            391   _P2_5           BIT 0xa5
0000            392   _P2_6           BIT 0xa6
0000            393   _P3_0           BIT 0xb0
0000            394   _P3_1           BIT 0xb1
0000            395   _P3_2           BIT 0xb2
0000            396   _P3_3           BIT 0xb3
0000            397   _P3_4           BIT 0xb4
0000            398   _P3_7           BIT 0xb7
0000            399   _CCF0           BIT 0xd8
0000            400   _CCF1           BIT 0xd9
0000            401   _CCF2           BIT 0xda
0000            402   _CCF3           BIT 0xdb
0000            403   _CCF4           BIT 0xdc
0000            404   _CCF5           BIT 0xdd
0000            405   _CR             BIT 0xde
0000            406   _CF             BIT 0xdf
0000            407   _PARITY         BIT 0xd0
0000            408   _F1             BIT 0xd1
0000            409   _OV             BIT 0xd2
0000            410   _RS0            BIT 0xd3
0000            411   _RS1            BIT 0xd4
0000            412   _F0             BIT 0xd5
0000            413   _AC             BIT 0xd6
0000            414   _CY             BIT 0xd7
0000            415   _RI             BIT 0x98
0000            416   _TI             BIT 0x99
0000            417   _RB8            BIT 0x9a
0000            418   _TB8            BIT 0x9b
0000            419   _REN            BIT 0x9c
0000            420   _CE             BIT 0x9d
0000            421   _SMODE          BIT 0x9e
0000            422   _RI1            BIT 0xc8
0000            423   _TI1            BIT 0xc9
0000            424   _RBX1           BIT 0xca
0000            425   _TBX1           BIT 0xcb
0000            426   _REN1           BIT 0xcc
0000            427   _PERR1          BIT 0xcd
0000            428   _OVR1           BIT 0xce
0000            429   _SI             BIT 0xc0
0000            430   _ACK            BIT 0xc1
0000            431   _ARBLOST        BIT 0xc2
0000            432   _ACKRQ          BIT 0xc3
0000            433   _STO            BIT 0xc4
0000            434   _STA            BIT 0xc5
0000            435   _TXMODE         BIT 0xc6
0000            436   _MASTER         BIT 0xc7
0000            437   _SPIEN          BIT 0xf8
0000            438   _TXNF           BIT 0xf9
0000            439   _NSSMD0         BIT 0xfa
0000            440   _NSSMD1         BIT 0xfb
0000            441   _RXOVRN         BIT 0xfc
0000            442   _MODF           BIT 0xfd
0000            443   _WCOL           BIT 0xfe
0000            444   _SPIF           BIT 0xff
0000            445   _IT0            BIT 0x88
0000            446   _IE0            BIT 0x89
0000            447   _IT1            BIT 0x8a
0000            448   _IE1            BIT 0x8b
0000            449   _TR0            BIT 0x8c
0000            450   _TF0            BIT 0x8d
0000            451   _TR1            BIT 0x8e
0000            452   _TF1            BIT 0x8f
0000            453   _T2XCLK0        BIT 0xc8
0000            454   _T2XCLK1        BIT 0xc9
0000            455   _TR2            BIT 0xca
0000            456   _T2SPLIT        BIT 0xcb
0000            457   _TF2CEN         BIT 0xcc
0000            458   _TF2LEN         BIT 0xcd
0000            459   _TF2L           BIT 0xce
0000            460   _TF2H           BIT 0xcf
0000            461   _T4XCLK0        BIT 0x98
0000            462   _T4XCLK1        BIT 0x99
0000            463   _TR4            BIT 0x9a
0000            464   _T4SPLIT        BIT 0x9b
0000            465   _TF4CEN         BIT 0x9c
0000            466   _TF4LEN         BIT 0x9d
0000            467   _TF4L           BIT 0x9e
0000            468   _TF4H           BIT 0x9f
0000            469   _T5XCLK0        BIT 0xc0
0000            470   _T5XCLK1        BIT 0xc1
0000            471   _TR5            BIT 0xc2
0000            472   _T5SPLIT        BIT 0xc3
0000            473   _TF5CEN         BIT 0xc4
0000            474   _TF5LEN         BIT 0xc5
0000            475   _TF5L           BIT 0xc6
0000            476   _TF5H           BIT 0xc7
0000            477   _RIE            BIT 0xd8
0000            478   _RXTO0          BIT 0xd9
0000            479   _RXTO1          BIT 0xda
0000            480   _RFRQ           BIT 0xdb
0000            481   _TIE            BIT 0xdc
0000            482   _TXHOLD         BIT 0xdd
0000            483   _TXNF1          BIT 0xde
0000            484   _TFRQ           BIT 0xdf
0000            485   ;--------------------------------------------------------
0000            486   ; overlayable register banks
0000            487   ;--------------------------------------------------------
0000            488            rbank0 segment data overlay
0000            489   ;--------------------------------------------------------
0000            490   ; internal ram data
0000            491   ;--------------------------------------------------------
0000            492            rseg R_DSEG
0000            493   _overflow_count:
0000            494            ds 1
0001            495   _sendMessage_PARM_2:
0001            496            ds 2
0003            497   _sendMessage_PARM_3:
0003            498            ds 2
0005            499   _sendMessage_PARM_4:
0005            500            ds 2
0007            501   _main_Vx_1_75:
0007            502            ds 4
000B            503   _main_backward_L_1_75:
000B            504            ds 2
000D            505   _main_backward_R_1_75:
000D            506            ds 2
000F            507   _main_forward_L_1_75:
000F            508            ds 2
0011            509   _main_forward_R_1_75:
0011            510            ds 2
0013            511   _main_sloc0_1_0:
0013            512            ds 4
0017            513   _main_sloc1_1_0:
0017            514            ds 4
001B            515   ;--------------------------------------------------------
001B            516   ; overlayable items in internal ram 
001B            517   ;--------------------------------------------------------
0000            518            rseg    R_OSEG
0000            519            rseg    R_OSEG
0000            520   _InitPinADC_PARM_2:
0000            521            ds 1
0001            522            rseg    R_OSEG
0001            523   ;--------------------------------------------------------
0001            524   ; indirectly addressable internal ram data
0001            525   ;--------------------------------------------------------
0000            526            rseg R_ISEG
0000            527   ;--------------------------------------------------------
0000            528   ; absolute internal ram data
0000            529   ;--------------------------------------------------------
0000            530            DSEG
0000            531   ;--------------------------------------------------------
0000            532   ; bit data
0000            533   ;--------------------------------------------------------
0000            534            rseg R_BSEG
0000            535   _on_off:
0000            536            DBIT    1
0001            537   ;--------------------------------------------------------
0001            538   ; paged external ram data
0001            539   ;--------------------------------------------------------
0000            540            rseg R_PSEG
0000            541   ;--------------------------------------------------------
0000            542   ; external ram data
0000            543   ;--------------------------------------------------------
0000            544            rseg R_XSEG
0000            545   ;--------------------------------------------------------
0000            546   ; absolute external ram data
0000            547   ;--------------------------------------------------------
0000            548            XSEG
0000            549   ;--------------------------------------------------------
0000            550   ; external initialized ram data
0000            551   ;--------------------------------------------------------
0000            552            rseg R_IXSEG
0000            553            rseg R_HOME
0000            554            rseg R_GSINIT
0000            555            rseg R_CSEG
0000            556   ;--------------------------------------------------------
0000            557   ; Reset entry point and interrupt vectors
0000            558   ;--------------------------------------------------------
0000            559            CSEG at 0x0000
0000 020100     560            ljmp    _crt0
002B            561            CSEG at 0x002b
002B 020100     562            ljmp    _Timer2_ISR
002E            563   ;--------------------------------------------------------
002E            564   ; global & static initialisations
002E            565   ;--------------------------------------------------------
0000            566            rseg R_HOME
0000            567            rseg R_GSINIT
0000            568            rseg R_GSINIT
0000            569   ;--------------------------------------------------------
0000            570   ; data variables initialization
0000            571   ;--------------------------------------------------------
0000            572            rseg R_DINIT
0000            573            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            574   ;--------------------------------------------------------
0000            575   ; code
0000            576   ;--------------------------------------------------------
0000            577            rseg R_CSEG
0000            578   ;------------------------------------------------------------
0000            579   ;Allocation info for local variables in function '_c51_external_startup'
0000            580   ;------------------------------------------------------------
0000            581   ;------------------------------------------------------------
0000            582   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:32: char _c51_external_startup (void)
0000            583   ;        -----------------------------------------
0000            584   ;         function _c51_external_startup
0000            585   ;        -----------------------------------------
0000            586   __c51_external_startup:
0000            587            using   0
0000            588   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:35: SFRPAGE = 0x00;
0000 75A700     589            mov     _SFRPAGE,#0x00
0003            590   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:36: WDTCN = 0xDE; //First key
0003 7597DE     591            mov     _WDTCN,#0xDE
0006            592   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:37: WDTCN = 0xAD; //Second key
0006 7597AD     593            mov     _WDTCN,#0xAD
0009            594   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:39: VDM0CN |= 0x80;
0009 43FF80     595            orl     _VDM0CN,#0x80
000C            596   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:40: RSTSRC = 0x02;
000C 75EF02     597            mov     _RSTSRC,#0x02
000F            598   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:47: SFRPAGE = 0x10;
000F 75A710     599            mov     _SFRPAGE,#0x10
0012            600   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:48: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     601            mov     _PFE0CN,#0x20
0015            602   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:49: SFRPAGE = 0x00;
0015 75A700     603            mov     _SFRPAGE,#0x00
0018            604   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:70: CLKSEL = 0x00;
0018 75A900     605            mov     _CLKSEL,#0x00
001B            606   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:71: CLKSEL = 0x00;
001B 75A900     607            mov     _CLKSEL,#0x00
001E            608   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:72: while ((CLKSEL & 0x80) == 0);
001E            609   L002001?:
001E E5A9       610            mov     a,_CLKSEL
0020 30E790     611            jnb     acc.7,L002001?
0023            612   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:73: CLKSEL = 0x03;
0023 75A903     613            mov     _CLKSEL,#0x03
0026            614   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:74: CLKSEL = 0x03;
0026 75A903     615            mov     _CLKSEL,#0x03
0029            616   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:75: while ((CLKSEL & 0x80) == 0);
0029            617   L002004?:
0029 E5A9       618            mov     a,_CLKSEL
002B 30E710     619            jnb     acc.7,L002004?
002E            620   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:81: P2MDOUT|=0b_0000_0011;
002E 43A603     621            orl     _P2MDOUT,#0x03
0031            622   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:82: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
0031 43A410     623            orl     _P0MDOUT,#0x10
0034            624   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:83: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0034 75E101     625            mov     _XBR0,#0x01
0037            626   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:84: XBR1     = 0X10; // Enable T0 on P0.0
0037 75E210     627            mov     _XBR1,#0x10
003A            628   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:85: XBR2     = 0x40; // Enable crossbar and weak pull-ups
003A 75E340     629            mov     _XBR2,#0x40
003D            630   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:91: SCON0 = 0x10;
003D 759810     631            mov     _SCON0,#0x10
0040            632   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:92: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
0040 858E8E     633            mov     _CKCON0,_CKCON0
0043            634   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:93: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0043 758DE6     635            mov     _TH1,#0xE6
0046            636   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:94: TL1 = TH1;      // Init Timer1
0046 858D8B     637            mov     _TL1,_TH1
0049            638   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:95: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0049 53890F     639            anl     _TMOD,#0x0F
004C            640   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:96: TMOD |=  0x20;                       
004C 438920     641            orl     _TMOD,#0x20
004F            642   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:97: TR1 = 1; // START Timer1
004F D28E       643            setb    _TR1
0051            644   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:98: TI = 1;  // Indicate TX0 ready
0051 D299       645            setb    _TI
0053            646   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:101: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
0053 75C800     647            mov     _TMR2CN0,#0x00
0056            648   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:102: CKCON0|=0b_0001_0000;
0056 438E10     649            orl     _CKCON0,#0x10
0059            650   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:103: TMR2RL=(-(SYSCLK/(2*DEFAULT_F))); // Initialize reload value
0059 75CAEE     651            mov     _TMR2RL,#0xEE
005C 75CBF6     652            mov     (_TMR2RL >> 8),#0xF6
005F            653   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:104: TMR2=0xffff;   // Set to reload immediately
005F 75CEFF     654            mov     _TMR2,#0xFF
0062 75CFFF     655            mov     (_TMR2 >> 8),#0xFF
0065            656   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:105: ET2=1;         // Enable Timer2 interrupts
0065 D2AD       657            setb    _ET2
0067            658   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:106: TR2=1;         // Start Timer2
0067 D2CA       659            setb    _TR2
0069            660   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:107: EA=1; // Global interrupt enable
0069 D2AF       661            setb    _EA
006B            662   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:109: return 0;
006B 758200     663            mov     dpl,#0x00
006E 22         664            ret
006F            665   ;------------------------------------------------------------
006F            666   ;Allocation info for local variables in function 'Timer3us'
006F            667   ;------------------------------------------------------------
006F            668   ;us                        Allocated to registers r2 
006F            669   ;i                         Allocated to registers r3 
006F            670   ;------------------------------------------------------------
006F            671   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:113: void Timer3us(unsigned char us)
006F            672   ;        -----------------------------------------
006F            673   ;         function Timer3us
006F            674   ;        -----------------------------------------
006F            675   _Timer3us:
006F AA82       676            mov     r2,dpl
0071            677   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:118: CKCON0|=0b_0100_0000;
0071 438E40     678            orl     _CKCON0,#0x40
0074            679   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:120: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0074 7592B8     680            mov     _TMR3RL,#0xB8
0077 7593FF     681            mov     (_TMR3RL >> 8),#0xFF
007A            682   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:121: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
007A 859294     683            mov     _TMR3,_TMR3RL
007D 859395     684            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0080            685   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:123: TMR3CN0 = 0x04;                 // Start Timer3 and clear overflow flag
0080 759104     686            mov     _TMR3CN0,#0x04
0083            687   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:124: for (i = 0; i < us; i++)       // Count <us> overflows
0083 7B00       688            mov     r3,#0x00
0085            689   L003006?:
0085 C3         690            clr     c
0086 EB         691            mov     a,r3
0087 9A         692            subb    a,r2
0088 5001       693            jnc     L003009?
008A            694   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:126: while (!(TMR3CN0 & 0x80));  // Wait for overflow
008A            695   L003001?:
008A E591       696            mov     a,_TMR3CN0
008C 30E710     697            jnb     acc.7,L003001?
008F            698   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:127: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008F 53917F     699            anl     _TMR3CN0,#0x7F
0092            700   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:128: if (TF0)
0092            701   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:130: TF0=0;
0092 108D50     702            jbc     _TF0,L003019?
0095 8001       703            sjmp    L003008?
0097            704   L003019?:
0097            705   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:131: overflow_count++;
0097 0510       706            inc     _overflow_count
0099            707   L003008?:
0099            708   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:124: for (i = 0; i < us; i++)       // Count <us> overflows
0099 0B         709            inc     r3
009A 8001       710            sjmp    L003006?
009C            711   L003009?:
009C            712   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:134: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
009C 759100     713            mov     _TMR3CN0,#0x00
009F 22         714            ret
00A0            715   ;------------------------------------------------------------
00A0            716   ;Allocation info for local variables in function 'waitms'
00A0            717   ;------------------------------------------------------------
00A0            718   ;ms                        Allocated to registers r2 r3 
00A0            719   ;j                         Allocated to registers r2 r3 
00A0            720   ;------------------------------------------------------------
00A0            721   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:137: void waitms (unsigned int ms)
00A0            722   ;        -----------------------------------------
00A0            723   ;         function waitms
00A0            724   ;        -----------------------------------------
00A0            725   _waitms:
00A0 AA82       726            mov     r2,dpl
00A2 AB83       727            mov     r3,dph
00A4            728   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:140: for(j=ms; j!=0; j--)
00A4            729   L004001?:
00A4 BA0050     730            cjne    r2,#0x00,L004010?
00A7 BB0050     731            cjne    r3,#0x00,L004010?
00AA 22         732            ret
00AB            733   L004010?:
00AB            734   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:142: Timer3us(249);
00AB 7582F9     735            mov     dpl,#0xF9
00AE C002       736            push    ar2
00B0 C003       737            push    ar3
00B2 120100     738            lcall   _Timer3us
00B5            739   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:143: Timer3us(249);
00B5 7582F9     740            mov     dpl,#0xF9
00B8 120100     741            lcall   _Timer3us
00BB            742   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:144: Timer3us(249);
00BB 7582F9     743            mov     dpl,#0xF9
00BE 120100     744            lcall   _Timer3us
00C1            745   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:145: Timer3us(250);
00C1 7582FA     746            mov     dpl,#0xFA
00C4 120100     747            lcall   _Timer3us
00C7 D003       748            pop     ar3
00C9 D002       749            pop     ar2
00CB            750   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:140: for(j=ms; j!=0; j--)
00CB 1A         751            dec     r2
00CC BAFF90     752            cjne    r2,#0xff,L004011?
00CF 1B         753            dec     r3
00D0            754   L004011?:
00D0 8001       755            sjmp    L004001?
00D2            756   ;------------------------------------------------------------
00D2            757   ;Allocation info for local variables in function 'Timer2_ISR'
00D2            758   ;------------------------------------------------------------
00D2            759   ;------------------------------------------------------------
00D2            760   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:149: void Timer2_ISR (void) interrupt INTERRUPT_TIMER2
00D2            761   ;        -----------------------------------------
00D2            762   ;         function Timer2_ISR
00D2            763   ;        -----------------------------------------
00D2            764   _Timer2_ISR:
00D2 C0D0       765            push    psw
00D4 75D000     766            mov     psw,#0x00
00D7            767   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:151: TF2H = 0; // Clear Timer2 interrupt flag
00D7 C2CF       768            clr     _TF2H
00D9            769   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:152: OUT0=!OUT0;
00D9 B2A0       770            cpl     _P2_0
00DB            771   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:153: OUT1=!OUT0;
00DB A2A0       772            mov     c,_P2_0
00DD B3         773            cpl     c
00DE 92A1       774            mov     _P2_1,c
00E0 D0D0       775            pop     psw
00E2 32         776            reti
00E3            777   ;        eliminated unneeded push/pop dpl
00E3            778   ;        eliminated unneeded push/pop dph
00E3            779   ;        eliminated unneeded push/pop b
00E3            780   ;        eliminated unneeded push/pop acc
00E3            781   ;------------------------------------------------------------
00E3            782   ;Allocation info for local variables in function 'InitADC'
00E3            783   ;------------------------------------------------------------
00E3            784   ;------------------------------------------------------------
00E3            785   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:156: void InitADC (void)
00E3            786   ;        -----------------------------------------
00E3            787   ;         function InitADC
00E3            788   ;        -----------------------------------------
00E3            789   _InitADC:
00E3            790   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:158: SFRPAGE = 0x00;
00E3 75A700     791            mov     _SFRPAGE,#0x00
00E6            792   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:159: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
00E6 75B280     793            mov     _ADC0CN1,#0x80
00E9            794   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:160: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
00E9 75BCF8     795            mov     _ADC0CF0,#0xF8
00EC            796   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:161: ADC0CF1 = 0b_0_0_011110; // Same as default for now
00EC 75B91E     797            mov     _ADC0CF1,#0x1E
00EF            798   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:162: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
00EF 75E800     799            mov     _ADC0CN0,#0x00
00F2            800   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:163: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
00F2 75DF3F     801            mov     _ADC0CF2,#0x3F
00F5            802   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:164: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
00F5 75B300     803            mov     _ADC0CN2,#0x00
00F8            804   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:165: ADEN=1; // Enable ADC
00F8 D2EF       805            setb    _ADEN
00FA 22         806            ret
00FB            807   ;------------------------------------------------------------
00FB            808   ;Allocation info for local variables in function 'InitPinADC'
00FB            809   ;------------------------------------------------------------
00FB            810   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00FB            811   ;portno                    Allocated to registers r2 
00FB            812   ;mask                      Allocated to registers r3 
00FB            813   ;------------------------------------------------------------
00FB            814   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:170: void InitPinADC (unsigned char portno, unsigned char pinno)
00FB            815   ;        -----------------------------------------
00FB            816   ;         function InitPinADC
00FB            817   ;        -----------------------------------------
00FB            818   _InitPinADC:
00FB AA82       819            mov     r2,dpl
00FD            820   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:174: mask=1<<pinno;
00FD 8550F0     821            mov     b,_InitPinADC_PARM_2
0100 05F0       822            inc     b
0102 7401       823            mov     a,#0x01
0104 8001       824            sjmp    L007013?
0106            825   L007011?:
0106 25E0       826            add     a,acc
0108            827   L007013?:
0108 D5F090     828            djnz    b,L007011?
010B FB         829            mov     r3,a
010C            830   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:176: SFRPAGE = 0x20;
010C 75A720     831            mov     _SFRPAGE,#0x20
010F            832   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:177: switch (portno)
010F BA00D0     833            cjne    r2,#0x00,L007014?
0112 8001       834            sjmp    L007001?
0114            835   L007014?:
0114 BA0150     836            cjne    r2,#0x01,L007015?
0117 8001       837            sjmp    L007002?
0119            838   L007015?:
0119            839   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:179: case 0:
0119 BA02D0     840            cjne    r2,#0x02,L007005?
011C 8001       841            sjmp    L007003?
011E            842   L007001?:
011E            843   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:180: P0MDIN &= (~mask); // Set pin as analog input
011E EB         844            mov     a,r3
011F F4         845            cpl     a
0120 FA         846            mov     r2,a
0121 52F1       847            anl     _P0MDIN,a
0123            848   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:181: P0SKIP |= mask; // Skip Crossbar decoding for this pin
0123 EB         849            mov     a,r3
0124 42D4       850            orl     _P0SKIP,a
0126            851   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:182: break;
0126            852   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:183: case 1:
0126 8001       853            sjmp    L007005?
0128            854   L007002?:
0128            855   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:184: P1MDIN &= (~mask); // Set pin as analog input
0128 EB         856            mov     a,r3
0129 F4         857            cpl     a
012A FA         858            mov     r2,a
012B 52F2       859            anl     _P1MDIN,a
012D            860   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:185: P1SKIP |= mask; // Skip Crossbar decoding for this pin
012D EB         861            mov     a,r3
012E 42D5       862            orl     _P1SKIP,a
0130            863   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:186: break;
0130            864   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:187: case 2:
0130 8001       865            sjmp    L007005?
0132            866   L007003?:
0132            867   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:188: P2MDIN &= (~mask); // Set pin as analog input
0132 EB         868            mov     a,r3
0133 F4         869            cpl     a
0134 FA         870            mov     r2,a
0135 52F3       871            anl     _P2MDIN,a
0137            872   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:189: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0137 EB         873            mov     a,r3
0138 42CC       874            orl     _P2SKIP,a
013A            875   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:193: }
013A            876   L007005?:
013A            877   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:194: SFRPAGE = 0x00;
013A 75A700     878            mov     _SFRPAGE,#0x00
013D 22         879            ret
013E            880   ;------------------------------------------------------------
013E            881   ;Allocation info for local variables in function 'ADC_at_Pin'
013E            882   ;------------------------------------------------------------
013E            883   ;pin                       Allocated to registers 
013E            884   ;------------------------------------------------------------
013E            885   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:197: unsigned int ADC_at_Pin(unsigned char pin)
013E            886   ;        -----------------------------------------
013E            887   ;         function ADC_at_Pin
013E            888   ;        -----------------------------------------
013E            889   _ADC_at_Pin:
013E 8582BB     890            mov     _ADC0MX,dpl
0141            891   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:200: ADBUSY=1;       // Dummy conversion first to select new pin
0141 D2EC       892            setb    _ADBUSY
0143            893   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:201: while (ADBUSY); // Wait for dummy conversion to finish
0143            894   L008001?:
0143 20EC50     895            jb      _ADBUSY,L008001?
0146            896   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:202: ADBUSY = 1;     // Convert voltage at the pin
0146 D2EC       897            setb    _ADBUSY
0148            898   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:203: while (ADBUSY); // Wait for conversion to complete
0148            899   L008004?:
0148 20EC90     900            jb      _ADBUSY,L008004?
014B            901   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:204: return (ADC0);
014B 85BD82     902            mov     dpl,_ADC0
014E 85BE83     903            mov     dph,(_ADC0 >> 8)
0151 22         904            ret
0152            905   ;------------------------------------------------------------
0152            906   ;Allocation info for local variables in function 'Volts_at_Pin'
0152            907   ;------------------------------------------------------------
0152            908   ;pin                       Allocated to registers r2 
0152            909   ;------------------------------------------------------------
0152            910   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:207: float Volts_at_Pin(unsigned char pin)
0152            911   ;        -----------------------------------------
0152            912   ;         function Volts_at_Pin
0152            913   ;        -----------------------------------------
0152            914   _Volts_at_Pin:
0152            915   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:209: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
0152 120100     916            lcall   _ADC_at_Pin
0155 120100     917            lcall   ___uint2fs
0158 AA82       918            mov     r2,dpl
015A AB83       919            mov     r3,dph
015C ACF0       920            mov     r4,b
015E FD         921            mov     r5,a
015F C002       922            push    ar2
0161 C003       923            push    ar3
0163 C004       924            push    ar4
0165 C005       925            push    ar5
0167 906C8B     926            mov     dptr,#0x6C8B
016A 75F053     927            mov     b,#0x53
016D 7440       928            mov     a,#0x40
016F 120100     929            lcall   ___fsmul
0172 AA82       930            mov     r2,dpl
0174 AB83       931            mov     r3,dph
0176 ACF0       932            mov     r4,b
0178 FD         933            mov     r5,a
0179 E581       934            mov     a,sp
017B 24FC       935            add     a,#0xfc
017D F581       936            mov     sp,a
017F E4         937            clr     a
0180 C0E0       938            push    acc
0182 74FC       939            mov     a,#0xFC
0184 C0E0       940            push    acc
0186 747F       941            mov     a,#0x7F
0188 C0E0       942            push    acc
018A 7446       943            mov     a,#0x46
018C C0E0       944            push    acc
018E 8A82       945            mov     dpl,r2
0190 8B83       946            mov     dph,r3
0192 8CF0       947            mov     b,r4
0194 ED         948            mov     a,r5
0195 120100     949            lcall   ___fsdiv
0198 AA82       950            mov     r2,dpl
019A AB83       951            mov     r3,dph
019C ACF0       952            mov     r4,b
019E FD         953            mov     r5,a
019F E581       954            mov     a,sp
01A1 24FC       955            add     a,#0xfc
01A3 F581       956            mov     sp,a
01A5 8A82       957            mov     dpl,r2
01A7 8B83       958            mov     dph,r3
01A9 8CF0       959            mov     b,r4
01AB ED         960            mov     a,r5
01AC 22         961            ret
01AD            962   ;------------------------------------------------------------
01AD            963   ;Allocation info for local variables in function 'sendZero'
01AD            964   ;------------------------------------------------------------
01AD            965   ;------------------------------------------------------------
01AD            966   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:212: void sendZero(void)
01AD            967   ;        -----------------------------------------
01AD            968   ;         function sendZero
01AD            969   ;        -----------------------------------------
01AD            970   _sendZero:
01AD            971   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:214: TR2=0; // Stop timer 2
01AD C2CA       972            clr     _TR2
01AF            973   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:215: waitms(BITWIDTH);
01AF 900005     974            mov     dptr,#0x0005
01B2 020100     975            ljmp    _waitms
01B5            976   ;------------------------------------------------------------
01B5            977   ;Allocation info for local variables in function 'sendOne'
01B5            978   ;------------------------------------------------------------
01B5            979   ;------------------------------------------------------------
01B5            980   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:218: void sendOne(void)
01B5            981   ;        -----------------------------------------
01B5            982   ;         function sendOne
01B5            983   ;        -----------------------------------------
01B5            984   _sendOne:
01B5            985   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:220: TR2=1; //Start timer 2
01B5 D2CA       986            setb    _TR2
01B7            987   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:221: waitms(BITWIDTH);
01B7 900005     988            mov     dptr,#0x0005
01BA 020100     989            ljmp    _waitms
01BD            990   ;------------------------------------------------------------
01BD            991   ;Allocation info for local variables in function 'sendCommand'
01BD            992   ;------------------------------------------------------------
01BD            993   ;number_send               Allocated to registers r2 r3 
01BD            994   ;------------------------------------------------------------
01BD            995   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:224: void sendCommand (int number_send)
01BD            996   ;        -----------------------------------------
01BD            997   ;         function sendCommand
01BD            998   ;        -----------------------------------------
01BD            999   _sendCommand:
01BD AA82      1000            mov     r2,dpl
01BF AB83      1001            mov     r3,dph
01C1           1002   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:226: if(number_send>=8)
01C1 C3        1003            clr     c
01C2 EA        1004            mov     a,r2
01C3 9408      1005            subb    a,#0x08
01C5 EB        1006            mov     a,r3
01C6 6480      1007            xrl     a,#0x80
01C8 9480      1008            subb    a,#0x80
01CA 4001      1009            jc      L012002?
01CC           1010   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:227: sendOne();
01CC C002      1011            push    ar2
01CE C003      1012            push    ar3
01D0 120100    1013            lcall   _sendOne
01D3 D003      1014            pop     ar3
01D5 D002      1015            pop     ar2
01D7 8001      1016            sjmp    L012003?
01D9           1017   L012002?:
01D9           1018   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:229: sendZero();
01D9 C002      1019            push    ar2
01DB C003      1020            push    ar3
01DD 120100    1021            lcall   _sendZero
01E0 D003      1022            pop     ar3
01E2 D002      1023            pop     ar2
01E4           1024   L012003?:
01E4           1025   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:230: if(number_send%8>=4)
01E4 750008    1026            mov     __modsint_PARM_2,#0x08
01E7 E4        1027            clr     a
01E8 F501      1028            mov     (__modsint_PARM_2 + 1),a
01EA 8A82      1029            mov     dpl,r2
01EC 8B83      1030            mov     dph,r3
01EE C002      1031            push    ar2
01F0 C003      1032            push    ar3
01F2 120100    1033            lcall   __modsint
01F5 AC82      1034            mov     r4,dpl
01F7 AD83      1035            mov     r5,dph
01F9 D003      1036            pop     ar3
01FB D002      1037            pop     ar2
01FD C3        1038            clr     c
01FE EC        1039            mov     a,r4
01FF 9404      1040            subb    a,#0x04
0201 ED        1041            mov     a,r5
0202 6480      1042            xrl     a,#0x80
0204 9480      1043            subb    a,#0x80
0206 4001      1044            jc      L012005?
0208           1045   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:231: sendOne();
0208 C002      1046            push    ar2
020A C003      1047            push    ar3
020C 120100    1048            lcall   _sendOne
020F D003      1049            pop     ar3
0211 D002      1050            pop     ar2
0213 8001      1051            sjmp    L012006?
0215           1052   L012005?:
0215           1053   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:233: sendZero();
0215 C002      1054            push    ar2
0217 C003      1055            push    ar3
0219 120100    1056            lcall   _sendZero
021C D003      1057            pop     ar3
021E D002      1058            pop     ar2
0220           1059   L012006?:
0220           1060   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:234: if(number_send%4>=2)
0220 750004    1061            mov     __modsint_PARM_2,#0x04
0223 E4        1062            clr     a
0224 F501      1063            mov     (__modsint_PARM_2 + 1),a
0226 8A82      1064            mov     dpl,r2
0228 8B83      1065            mov     dph,r3
022A C002      1066            push    ar2
022C C003      1067            push    ar3
022E 120100    1068            lcall   __modsint
0231 AC82      1069            mov     r4,dpl
0233 AD83      1070            mov     r5,dph
0235 D003      1071            pop     ar3
0237 D002      1072            pop     ar2
0239 C3        1073            clr     c
023A EC        1074            mov     a,r4
023B 9402      1075            subb    a,#0x02
023D ED        1076            mov     a,r5
023E 6480      1077            xrl     a,#0x80
0240 9480      1078            subb    a,#0x80
0242 4001      1079            jc      L012008?
0244           1080   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:235: sendOne();
0244 C002      1081            push    ar2
0246 C003      1082            push    ar3
0248 120100    1083            lcall   _sendOne
024B D003      1084            pop     ar3
024D D002      1085            pop     ar2
024F 8001      1086            sjmp    L012009?
0251           1087   L012008?:
0251           1088   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:237: sendZero();
0251 C002      1089            push    ar2
0253 C003      1090            push    ar3
0255 120100    1091            lcall   _sendZero
0258 D003      1092            pop     ar3
025A D002      1093            pop     ar2
025C           1094   L012009?:
025C           1095   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:238: if(number_send%2>=1)
025C 750002    1096            mov     __modsint_PARM_2,#0x02
025F E4        1097            clr     a
0260 F501      1098            mov     (__modsint_PARM_2 + 1),a
0262 8A82      1099            mov     dpl,r2
0264 8B83      1100            mov     dph,r3
0266 120100    1101            lcall   __modsint
0269 AA82      1102            mov     r2,dpl
026B AB83      1103            mov     r3,dph
026D C3        1104            clr     c
026E EA        1105            mov     a,r2
026F 9401      1106            subb    a,#0x01
0271 EB        1107            mov     a,r3
0272 6480      1108            xrl     a,#0x80
0274 9480      1109            subb    a,#0x80
0276 4001      1110            jc      L012011?
0278           1111   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:239: sendOne();
0278 020100    1112            ljmp    _sendOne
027B           1113   L012011?:
027B           1114   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:241: sendZero();
027B 020100    1115            ljmp    _sendZero
027E           1116   ;------------------------------------------------------------
027E           1117   ;Allocation info for local variables in function 'sendMessage'
027E           1118   ;------------------------------------------------------------
027E           1119   ;backward_R                Allocated with name '_sendMessage_PARM_2'
027E           1120   ;forward_L                 Allocated with name '_sendMessage_PARM_3'
027E           1121   ;forward_R                 Allocated with name '_sendMessage_PARM_4'
027E           1122   ;backward_L                Allocated to registers r2 r3 
027E           1123   ;------------------------------------------------------------
027E           1124   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:244: void sendMessage (int backward_L, int backward_R, int forward_L, int forward_R)
027E           1125   ;        -----------------------------------------
027E           1126   ;         function sendMessage
027E           1127   ;        -----------------------------------------
027E           1128   _sendMessage:
027E AA82      1129            mov     r2,dpl
0280 AB83      1130            mov     r3,dph
0282           1131   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:247: sendOne();
0282 C002      1132            push    ar2
0284 C003      1133            push    ar3
0286 120100    1134            lcall   _sendOne
0289           1135   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:248: sendOne();
0289 120100    1136            lcall   _sendOne
028C           1137   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:249: sendZero();
028C 120100    1138            lcall   _sendZero
028F D003      1139            pop     ar3
0291 D002      1140            pop     ar2
0293           1141   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:250: if (forward_L>0)
0293 C3        1142            clr     c
0294 E4        1143            clr     a
0295 9580      1144            subb    a,_sendMessage_PARM_3
0297 E4        1145            clr     a
0298 6480      1146            xrl     a,#0x80
029A 8581F0    1147            mov     b,(_sendMessage_PARM_3 + 1)
029D 63F080    1148            xrl     b,#0x80
02A0 95F0      1149            subb    a,b
02A2 5001      1150            jnc     L013002?
02A4           1151   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:252: sendOne();
02A4 120100    1152            lcall   _sendOne
02A7           1153   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:253: sendCommand(forward_L);
02A7 858082    1154            mov     dpl,_sendMessage_PARM_3
02AA 858183    1155            mov     dph,(_sendMessage_PARM_3 + 1)
02AD 120100    1156            lcall   _sendCommand
02B0 8001      1157            sjmp    L013003?
02B2           1158   L013002?:
02B2           1159   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:257: sendZero();
02B2 C002      1160            push    ar2
02B4 C003      1161            push    ar3
02B6 120100    1162            lcall   _sendZero
02B9 D003      1163            pop     ar3
02BB D002      1164            pop     ar2
02BD           1165   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:258: sendCommand(backward_L);
02BD 8A82      1166            mov     dpl,r2
02BF 8B83      1167            mov     dph,r3
02C1 120100    1168            lcall   _sendCommand
02C4           1169   L013003?:
02C4           1170   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:260: if (forward_R>0)
02C4 C3        1171            clr     c
02C5 E4        1172            clr     a
02C6 9530      1173            subb    a,_sendMessage_PARM_4
02C8 E4        1174            clr     a
02C9 6480      1175            xrl     a,#0x80
02CB 8531F0    1176            mov     b,(_sendMessage_PARM_4 + 1)
02CE 63F080    1177            xrl     b,#0x80
02D1 95F0      1178            subb    a,b
02D3 5001      1179            jnc     L013005?
02D5           1180   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:262: sendOne();
02D5 120100    1181            lcall   _sendOne
02D8           1182   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:263: sendCommand(forward_R);
02D8 853082    1183            mov     dpl,_sendMessage_PARM_4
02DB 853183    1184            mov     dph,(_sendMessage_PARM_4 + 1)
02DE 120100    1185            lcall   _sendCommand
02E1 8001      1186            sjmp    L013006?
02E3           1187   L013005?:
02E3           1188   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:267: sendZero();
02E3 120100    1189            lcall   _sendZero
02E6           1190   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:268: sendCommand(backward_R);
02E6 85D082    1191            mov     dpl,_sendMessage_PARM_2
02E9 85D183    1192            mov     dph,(_sendMessage_PARM_2 + 1)
02EC 120100    1193            lcall   _sendCommand
02EF           1194   L013006?:
02EF           1195   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:270: sendZero();
02EF 120100    1196            lcall   _sendZero
02F2           1197   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:271: sendZero();
02F2 120100    1198            lcall   _sendZero
02F5           1199   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:272: sendOne();
02F5 120100    1200            lcall   _sendOne
02F8           1201   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:274: TR2=0;
02F8 C2CA      1202            clr     _TR2
02FA           1203   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:275: waitms(DELAY*BITWIDTH);
02FA 900050    1204            mov     dptr,#0x0050
02FD 020100    1205            ljmp    _waitms
0300           1206   ;------------------------------------------------------------
0300           1207   ;Allocation info for local variables in function 'main'
0300           1208   ;------------------------------------------------------------
0300           1209   ;Vx                        Allocated with name '_main_Vx_1_75'
0300           1210   ;Vy                        Allocated to registers r4 r5 r2 r3 
0300           1211   ;backward_L                Allocated with name '_main_backward_L_1_75'
0300           1212   ;backward_R                Allocated with name '_main_backward_R_1_75'
0300           1213   ;forward_L                 Allocated with name '_main_forward_L_1_75'
0300           1214   ;forward_R                 Allocated with name '_main_forward_R_1_75'
0300           1215   ;sloc0                     Allocated with name '_main_sloc0_1_0'
0300           1216   ;sloc1                     Allocated with name '_main_sloc1_1_0'
0300           1217   ;------------------------------------------------------------
0300           1218   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:278: void main (void)
0300           1219   ;        -----------------------------------------
0300           1220   ;         function main
0300           1221   ;        -----------------------------------------
0300           1222   _main:
0300           1223   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:282: unsigned int backward_L = 0;
0300           1224   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:283: unsigned int backward_R = 0;
0300           1225   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:284: unsigned int forward_L = 0;
0300           1226   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:285: unsigned int forward_R = 0;
0300 E4        1227            clr     a
0301 F5A0      1228            mov     _main_backward_L_1_75,a
0303 F5A1      1229            mov     (_main_backward_L_1_75 + 1),a
0305 F5F0      1230            mov     _main_backward_R_1_75,a
0307 F5F1      1231            mov     (_main_backward_R_1_75 + 1),a
0309 F540      1232            mov     _main_forward_L_1_75,a
030B F541      1233            mov     (_main_forward_L_1_75 + 1),a
030D F590      1234            mov     _main_forward_R_1_75,a
030F F591      1235            mov     (_main_forward_R_1_75 + 1),a
0311           1236   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:287: InitADC();
0311 120100    1237            lcall   _InitADC
0314           1238   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:288: InitPinADC(0,1);
0314 755001    1239            mov     _InitPinADC_PARM_2,#0x01
0317 758200    1240            mov     dpl,#0x00
031A 120100    1241            lcall   _InitPinADC
031D           1242   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:289: InitPinADC(0,2);
031D 755002    1243            mov     _InitPinADC_PARM_2,#0x02
0320 758200    1244            mov     dpl,#0x00
0323 120100    1245            lcall   _InitPinADC
0326           1246   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:291: TMR2RL=0x10000L-(SYSCLK/(2L*FREQ));
0326 75CAEE    1247            mov     _TMR2RL,#0xEE
0329 75CBF6    1248            mov     (_TMR2RL >> 8),#0xF6
032C           1249   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:292: TR2=0; // Stop timer 2
032C C2CA      1250            clr     _TR2
032E           1251   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:294: while(1)
032E           1252   L014051?:
032E           1253   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:296: Vx = Volts_at_Pin(QFP32_MUX_P0_1);
032E 758200    1254            mov     dpl,#0x00
0331 120100    1255            lcall   _Volts_at_Pin
0334 858250    1256            mov     _main_Vx_1_75,dpl
0337 858351    1257            mov     (_main_Vx_1_75 + 1),dph
033A 85F052    1258            mov     (_main_Vx_1_75 + 2),b
033D F553      1259            mov     (_main_Vx_1_75 + 3),a
033F           1260   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:297: Vy = Volts_at_Pin(QFP32_MUX_P0_2);
033F 758201    1261            mov     dpl,#0x01
0342 120100    1262            lcall   _Volts_at_Pin
0345 AC82      1263            mov     r4,dpl
0347 AD83      1264            mov     r5,dph
0349 AAF0      1265            mov     r2,b
034B FB        1266            mov     r3,a
034C           1267   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:299: if(Vx>VxMidHigh && Vy>VyMidHigh)  //forward right
034C C002      1268            push    ar2
034E C003      1269            push    ar3
0350 C004      1270            push    ar4
0352 C005      1271            push    ar5
0354 743D      1272            mov     a,#0x3D
0356 C0E0      1273            push    acc
0358 740A      1274            mov     a,#0x0A
035A C0E0      1275            push    acc
035C 74D7      1276            mov     a,#0xD7
035E C0E0      1277            push    acc
0360 743F      1278            mov     a,#0x3F
0362 C0E0      1279            push    acc
0364 855082    1280            mov     dpl,_main_Vx_1_75
0367 855183    1281            mov     dph,(_main_Vx_1_75 + 1)
036A 8552F0    1282            mov     b,(_main_Vx_1_75 + 2)
036D E553      1283            mov     a,(_main_Vx_1_75 + 3)
036F 120100    1284            lcall   ___fsgt
0372 AE82      1285            mov     r6,dpl
0374 E581      1286            mov     a,sp
0376 24FC      1287            add     a,#0xfc
0378 F581      1288            mov     sp,a
037A D005      1289            pop     ar5
037C D004      1290            pop     ar4
037E D003      1291            pop     ar3
0380 D002      1292            pop     ar2
0382 EE        1293            mov     a,r6
0383 7001      1294            jnz     L014084?
0385 020100    1295            ljmp    L014039?
0388           1296   L014084?:
0388 C002      1297            push    ar2
038A C003      1298            push    ar3
038C C004      1299            push    ar4
038E C005      1300            push    ar5
0390 C006      1301            push    ar6
0392 74CD      1302            mov     a,#0xCD
0394 C0E0      1303            push    acc
0396 74CC      1304            mov     a,#0xCC
0398 C0E0      1305            push    acc
039A C0E0      1306            push    acc
039C 743F      1307            mov     a,#0x3F
039E C0E0      1308            push    acc
03A0 8C82      1309            mov     dpl,r4
03A2 8D83      1310            mov     dph,r5
03A4 8AF0      1311            mov     b,r2
03A6 EB        1312            mov     a,r3
03A7 120100    1313            lcall   ___fsgt
03AA AF82      1314            mov     r7,dpl
03AC E581      1315            mov     a,sp
03AE 24FC      1316            add     a,#0xfc
03B0 F581      1317            mov     sp,a
03B2 D006      1318            pop     ar6
03B4 D005      1319            pop     ar5
03B6 D004      1320            pop     ar4
03B8 D003      1321            pop     ar3
03BA D002      1322            pop     ar2
03BC EF        1323            mov     a,r7
03BD 7001      1324            jnz     L014085?
03BF 020100    1325            ljmp    L014039?
03C2           1326   L014085?:
03C2           1327   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:301: backward_L=0;
03C2           1328   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:302: backward_R=0;
03C2 E4        1329            clr     a
03C3 F5A0      1330            mov     _main_backward_L_1_75,a
03C5 F5A1      1331            mov     (_main_backward_L_1_75 + 1),a
03C7 F5F0      1332            mov     _main_backward_R_1_75,a
03C9 F5F1      1333            mov     (_main_backward_R_1_75 + 1),a
03CB           1334   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:303: forward_L=(int)(((Vx-VxMid)/VxMid)*10);
03CB 748F      1335            mov     a,#0x8F
03CD C0E0      1336            push    acc
03CF 74C2      1337            mov     a,#0xC2
03D1 C0E0      1338            push    acc
03D3 74D5      1339            mov     a,#0xD5
03D5 C0E0      1340            push    acc
03D7 743F      1341            mov     a,#0x3F
03D9 C0E0      1342            push    acc
03DB 855082    1343            mov     dpl,_main_Vx_1_75
03DE 855183    1344            mov     dph,(_main_Vx_1_75 + 1)
03E1 8552F0    1345            mov     b,(_main_Vx_1_75 + 2)
03E4 E553      1346            mov     a,(_main_Vx_1_75 + 3)
03E6 120100    1347            lcall   ___fssub
03E9 8582D0    1348            mov     _main_sloc0_1_0,dpl
03EC 8583D1    1349            mov     (_main_sloc0_1_0 + 1),dph
03EF 85F0D2    1350            mov     (_main_sloc0_1_0 + 2),b
03F2 F5D3      1351            mov     (_main_sloc0_1_0 + 3),a
03F4 E581      1352            mov     a,sp
03F6 24FC      1353            add     a,#0xfc
03F8 F581      1354            mov     sp,a
03FA 748F      1355            mov     a,#0x8F
03FC C0E0      1356            push    acc
03FE 74C2      1357            mov     a,#0xC2
0400 C0E0      1358            push    acc
0402 74D5      1359            mov     a,#0xD5
0404 C0E0      1360            push    acc
0406 743F      1361            mov     a,#0x3F
0408 C0E0      1362            push    acc
040A 85D082    1363            mov     dpl,_main_sloc0_1_0
040D 85D183    1364            mov     dph,(_main_sloc0_1_0 + 1)
0410 85D2F0    1365            mov     b,(_main_sloc0_1_0 + 2)
0413 E5D3      1366            mov     a,(_main_sloc0_1_0 + 3)
0415 120100    1367            lcall   ___fsdiv
0418 8582D0    1368            mov     _main_sloc0_1_0,dpl
041B 8583D1    1369            mov     (_main_sloc0_1_0 + 1),dph
041E 85F0D2    1370            mov     (_main_sloc0_1_0 + 2),b
0421 F5D3      1371            mov     (_main_sloc0_1_0 + 3),a
0423 E581      1372            mov     a,sp
0425 24FC      1373            add     a,#0xfc
0427 F581      1374            mov     sp,a
0429 C0D0      1375            push    _main_sloc0_1_0
042B C0D1      1376            push    (_main_sloc0_1_0 + 1)
042D C0D2      1377            push    (_main_sloc0_1_0 + 2)
042F C0D3      1378            push    (_main_sloc0_1_0 + 3)
0431 900000    1379            mov     dptr,#0x0000
0434 75F020    1380            mov     b,#0x20
0437 7441      1381            mov     a,#0x41
0439 120100    1382            lcall   ___fsmul
043C 8582D0    1383            mov     _main_sloc0_1_0,dpl
043F 8583D1    1384            mov     (_main_sloc0_1_0 + 1),dph
0442 85F0D2    1385            mov     (_main_sloc0_1_0 + 2),b
0445 F5D3      1386            mov     (_main_sloc0_1_0 + 3),a
0447 E581      1387            mov     a,sp
0449 24FC      1388            add     a,#0xfc
044B F581      1389            mov     sp,a
044D 85D082    1390            mov     dpl,_main_sloc0_1_0
0450 85D183    1391            mov     dph,(_main_sloc0_1_0 + 1)
0453 85D2F0    1392            mov     b,(_main_sloc0_1_0 + 2)
0456 E5D3      1393            mov     a,(_main_sloc0_1_0 + 3)
0458 120100    1394            lcall   ___fs2sint
045B 858240    1395            mov     _main_forward_L_1_75,dpl
045E 858341    1396            mov     (_main_forward_L_1_75 + 1),dph
0461           1397   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:304: forward_R=(int)((((Vx-VxMid)/VxMid)*10)/2.0);
0461 E4        1398            clr     a
0462 C0E0      1399            push    acc
0464 C0E0      1400            push    acc
0466 C0E0      1401            push    acc
0468 7440      1402            mov     a,#0x40
046A C0E0      1403            push    acc
046C 85D082    1404            mov     dpl,_main_sloc0_1_0
046F 85D183    1405            mov     dph,(_main_sloc0_1_0 + 1)
0472 85D2F0    1406            mov     b,(_main_sloc0_1_0 + 2)
0475 E5D3      1407            mov     a,(_main_sloc0_1_0 + 3)
0477 120100    1408            lcall   ___fsdiv
047A 8582D0    1409            mov     _main_sloc0_1_0,dpl
047D 8583D1    1410            mov     (_main_sloc0_1_0 + 1),dph
0480 85F0D2    1411            mov     (_main_sloc0_1_0 + 2),b
0483 F5D3      1412            mov     (_main_sloc0_1_0 + 3),a
0485 E581      1413            mov     a,sp
0487 24FC      1414            add     a,#0xfc
0489 F581      1415            mov     sp,a
048B 85D082    1416            mov     dpl,_main_sloc0_1_0
048E 85D183    1417            mov     dph,(_main_sloc0_1_0 + 1)
0491 85D2F0    1418            mov     b,(_main_sloc0_1_0 + 2)
0494 E5D3      1419            mov     a,(_main_sloc0_1_0 + 3)
0496 120100    1420            lcall   ___fs2sint
0499 858290    1421            mov     _main_forward_R_1_75,dpl
049C 858391    1422            mov     (_main_forward_R_1_75 + 1),dph
049F 020100    1423            ljmp    L014040?
04A2           1424   L014039?:
04A2           1425   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:306: else if(Vx>VxMidHigh && Vy<VyMidLow) //forward left
04A2 EE        1426            mov     a,r6
04A3 7001      1427            jnz     L014086?
04A5 020100    1428            ljmp    L014035?
04A8           1429   L014086?:
04A8 C002      1430            push    ar2
04AA C003      1431            push    ar3
04AC C004      1432            push    ar4
04AE C005      1433            push    ar5
04B0 C006      1434            push    ar6
04B2 7471      1435            mov     a,#0x71
04B4 C0E0      1436            push    acc
04B6 743D      1437            mov     a,#0x3D
04B8 C0E0      1438            push    acc
04BA 74CA      1439            mov     a,#0xCA
04BC C0E0      1440            push    acc
04BE 743F      1441            mov     a,#0x3F
04C0 C0E0      1442            push    acc
04C2 8C82      1443            mov     dpl,r4
04C4 8D83      1444            mov     dph,r5
04C6 8AF0      1445            mov     b,r2
04C8 EB        1446            mov     a,r3
04C9 120100    1447            lcall   ___fslt
04CC AF82      1448            mov     r7,dpl
04CE E581      1449            mov     a,sp
04D0 24FC      1450            add     a,#0xfc
04D2 F581      1451            mov     sp,a
04D4 D006      1452            pop     ar6
04D6 D005      1453            pop     ar5
04D8 D004      1454            pop     ar4
04DA D003      1455            pop     ar3
04DC D002      1456            pop     ar2
04DE EF        1457            mov     a,r7
04DF 7001      1458            jnz     L014087?
04E1 020100    1459            ljmp    L014035?
04E4           1460   L014087?:
04E4           1461   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:308: backward_L=0;
04E4           1462   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:309: backward_R=0;
04E4 E4        1463            clr     a
04E5 F5A0      1464            mov     _main_backward_L_1_75,a
04E7 F5A1      1465            mov     (_main_backward_L_1_75 + 1),a
04E9 F5F0      1466            mov     _main_backward_R_1_75,a
04EB F5F1      1467            mov     (_main_backward_R_1_75 + 1),a
04ED           1468   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:310: forward_L=(int)((((Vx-VxMid)/VxMid)*10)/2.0);
04ED 748F      1469            mov     a,#0x8F
04EF C0E0      1470            push    acc
04F1 74C2      1471            mov     a,#0xC2
04F3 C0E0      1472            push    acc
04F5 74D5      1473            mov     a,#0xD5
04F7 C0E0      1474            push    acc
04F9 743F      1475            mov     a,#0x3F
04FB C0E0      1476            push    acc
04FD 855082    1477            mov     dpl,_main_Vx_1_75
0500 855183    1478            mov     dph,(_main_Vx_1_75 + 1)
0503 8552F0    1479            mov     b,(_main_Vx_1_75 + 2)
0506 E553      1480            mov     a,(_main_Vx_1_75 + 3)
0508 120100    1481            lcall   ___fssub
050B 8582D0    1482            mov     _main_sloc0_1_0,dpl
050E 8583D1    1483            mov     (_main_sloc0_1_0 + 1),dph
0511 85F0D2    1484            mov     (_main_sloc0_1_0 + 2),b
0514 F5D3      1485            mov     (_main_sloc0_1_0 + 3),a
0516 E581      1486            mov     a,sp
0518 24FC      1487            add     a,#0xfc
051A F581      1488            mov     sp,a
051C 748F      1489            mov     a,#0x8F
051E C0E0      1490            push    acc
0520 74C2      1491            mov     a,#0xC2
0522 C0E0      1492            push    acc
0524 74D5      1493            mov     a,#0xD5
0526 C0E0      1494            push    acc
0528 743F      1495            mov     a,#0x3F
052A C0E0      1496            push    acc
052C 85D082    1497            mov     dpl,_main_sloc0_1_0
052F 85D183    1498            mov     dph,(_main_sloc0_1_0 + 1)
0532 85D2F0    1499            mov     b,(_main_sloc0_1_0 + 2)
0535 E5D3      1500            mov     a,(_main_sloc0_1_0 + 3)
0537 120100    1501            lcall   ___fsdiv
053A 8582D0    1502            mov     _main_sloc0_1_0,dpl
053D 8583D1    1503            mov     (_main_sloc0_1_0 + 1),dph
0540 85F0D2    1504            mov     (_main_sloc0_1_0 + 2),b
0543 F5D3      1505            mov     (_main_sloc0_1_0 + 3),a
0545 E581      1506            mov     a,sp
0547 24FC      1507            add     a,#0xfc
0549 F581      1508            mov     sp,a
054B C0D0      1509            push    _main_sloc0_1_0
054D C0D1      1510            push    (_main_sloc0_1_0 + 1)
054F C0D2      1511            push    (_main_sloc0_1_0 + 2)
0551 C0D3      1512            push    (_main_sloc0_1_0 + 3)
0553 900000    1513            mov     dptr,#0x0000
0556 75F020    1514            mov     b,#0x20
0559 7441      1515            mov     a,#0x41
055B 120100    1516            lcall   ___fsmul
055E 8582D0    1517            mov     _main_sloc0_1_0,dpl
0561 8583D1    1518            mov     (_main_sloc0_1_0 + 1),dph
0564 85F0D2    1519            mov     (_main_sloc0_1_0 + 2),b
0567 F5D3      1520            mov     (_main_sloc0_1_0 + 3),a
0569 E581      1521            mov     a,sp
056B 24FC      1522            add     a,#0xfc
056D F581      1523            mov     sp,a
056F E4        1524            clr     a
0570 C0E0      1525            push    acc
0572 C0E0      1526            push    acc
0574 C0E0      1527            push    acc
0576 7440      1528            mov     a,#0x40
0578 C0E0      1529            push    acc
057A 85D082    1530            mov     dpl,_main_sloc0_1_0
057D 85D183    1531            mov     dph,(_main_sloc0_1_0 + 1)
0580 85D2F0    1532            mov     b,(_main_sloc0_1_0 + 2)
0583 E5D3      1533            mov     a,(_main_sloc0_1_0 + 3)
0585 120100    1534            lcall   ___fsdiv
0588 858210    1535            mov     _main_sloc1_1_0,dpl
058B 858311    1536            mov     (_main_sloc1_1_0 + 1),dph
058E 85F012    1537            mov     (_main_sloc1_1_0 + 2),b
0591 F513      1538            mov     (_main_sloc1_1_0 + 3),a
0593 E581      1539            mov     a,sp
0595 24FC      1540            add     a,#0xfc
0597 F581      1541            mov     sp,a
0599 851082    1542            mov     dpl,_main_sloc1_1_0
059C 851183    1543            mov     dph,(_main_sloc1_1_0 + 1)
059F 8512F0    1544            mov     b,(_main_sloc1_1_0 + 2)
05A2 E513      1545            mov     a,(_main_sloc1_1_0 + 3)
05A4 120100    1546            lcall   ___fs2sint
05A7 858240    1547            mov     _main_forward_L_1_75,dpl
05AA 858341    1548            mov     (_main_forward_L_1_75 + 1),dph
05AD           1549   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:311: forward_R=(int)(((Vx-VxMid)/VxMid)*10);   
05AD 85D082    1550            mov     dpl,_main_sloc0_1_0
05B0 85D183    1551            mov     dph,(_main_sloc0_1_0 + 1)
05B3 85D2F0    1552            mov     b,(_main_sloc0_1_0 + 2)
05B6 E5D3      1553            mov     a,(_main_sloc0_1_0 + 3)
05B8 120100    1554            lcall   ___fs2sint
05BB 858290    1555            mov     _main_forward_R_1_75,dpl
05BE 858391    1556            mov     (_main_forward_R_1_75 + 1),dph
05C1 020100    1557            ljmp    L014040?
05C4           1558   L014035?:
05C4           1559   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:313: else if(Vx>VxMidHigh && Vy>VyMidLow && Vy<VyMidHigh) //forward
05C4 EE        1560            mov     a,r6
05C5 7001      1561            jnz     L014088?
05C7 020100    1562            ljmp    L014030?
05CA           1563   L014088?:
05CA C002      1564            push    ar2
05CC C003      1565            push    ar3
05CE C004      1566            push    ar4
05D0 C005      1567            push    ar5
05D2 7471      1568            mov     a,#0x71
05D4 C0E0      1569            push    acc
05D6 743D      1570            mov     a,#0x3D
05D8 C0E0      1571            push    acc
05DA 74CA      1572            mov     a,#0xCA
05DC C0E0      1573            push    acc
05DE 743F      1574            mov     a,#0x3F
05E0 C0E0      1575            push    acc
05E2 8C82      1576            mov     dpl,r4
05E4 8D83      1577            mov     dph,r5
05E6 8AF0      1578            mov     b,r2
05E8 EB        1579            mov     a,r3
05E9 120100    1580            lcall   ___fsgt
05EC AE82      1581            mov     r6,dpl
05EE E581      1582            mov     a,sp
05F0 24FC      1583            add     a,#0xfc
05F2 F581      1584            mov     sp,a
05F4 D005      1585            pop     ar5
05F6 D004      1586            pop     ar4
05F8 D003      1587            pop     ar3
05FA D002      1588            pop     ar2
05FC EE        1589            mov     a,r6
05FD 7001      1590            jnz     L014089?
05FF 020100    1591            ljmp    L014030?
0602           1592   L014089?:
0602 C002      1593            push    ar2
0604 C003      1594            push    ar3
0606 C004      1595            push    ar4
0608 C005      1596            push    ar5
060A 74CD      1597            mov     a,#0xCD
060C C0E0      1598            push    acc
060E 74CC      1599            mov     a,#0xCC
0610 C0E0      1600            push    acc
0612 C0E0      1601            push    acc
0614 743F      1602            mov     a,#0x3F
0616 C0E0      1603            push    acc
0618 8C82      1604            mov     dpl,r4
061A 8D83      1605            mov     dph,r5
061C 8AF0      1606            mov     b,r2
061E EB        1607            mov     a,r3
061F 120100    1608            lcall   ___fslt
0622 AE82      1609            mov     r6,dpl
0624 E581      1610            mov     a,sp
0626 24FC      1611            add     a,#0xfc
0628 F581      1612            mov     sp,a
062A D005      1613            pop     ar5
062C D004      1614            pop     ar4
062E D003      1615            pop     ar3
0630 D002      1616            pop     ar2
0632 EE        1617            mov     a,r6
0633 7001      1618            jnz     L014090?
0635 020100    1619            ljmp    L014030?
0638           1620   L014090?:
0638           1621   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:315: backward_L=0;
0638           1622   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:316: backward_R=0;
0638 E4        1623            clr     a
0639 F5A0      1624            mov     _main_backward_L_1_75,a
063B F5A1      1625            mov     (_main_backward_L_1_75 + 1),a
063D F5F0      1626            mov     _main_backward_R_1_75,a
063F F5F1      1627            mov     (_main_backward_R_1_75 + 1),a
0641           1628   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:317: forward_L=(int)(((Vx-VxMid)/VxMid)*10);
0641 748F      1629            mov     a,#0x8F
0643 C0E0      1630            push    acc
0645 74C2      1631            mov     a,#0xC2
0647 C0E0      1632            push    acc
0649 74D5      1633            mov     a,#0xD5
064B C0E0      1634            push    acc
064D 743F      1635            mov     a,#0x3F
064F C0E0      1636            push    acc
0651 855082    1637            mov     dpl,_main_Vx_1_75
0654 855183    1638            mov     dph,(_main_Vx_1_75 + 1)
0657 8552F0    1639            mov     b,(_main_Vx_1_75 + 2)
065A E553      1640            mov     a,(_main_Vx_1_75 + 3)
065C 120100    1641            lcall   ___fssub
065F AE82      1642            mov     r6,dpl
0661 AF83      1643            mov     r7,dph
0663 A8F0      1644            mov     r0,b
0665 F9        1645            mov     r1,a
0666 E581      1646            mov     a,sp
0668 24FC      1647            add     a,#0xfc
066A F581      1648            mov     sp,a
066C 748F      1649            mov     a,#0x8F
066E C0E0      1650            push    acc
0670 74C2      1651            mov     a,#0xC2
0672 C0E0      1652            push    acc
0674 74D5      1653            mov     a,#0xD5
0676 C0E0      1654            push    acc
0678 743F      1655            mov     a,#0x3F
067A C0E0      1656            push    acc
067C 8E82      1657            mov     dpl,r6
067E 8F83      1658            mov     dph,r7
0680 88F0      1659            mov     b,r0
0682 E9        1660            mov     a,r1
0683 120100    1661            lcall   ___fsdiv
0686 AE82      1662            mov     r6,dpl
0688 AF83      1663            mov     r7,dph
068A A8F0      1664            mov     r0,b
068C F9        1665            mov     r1,a
068D E581      1666            mov     a,sp
068F 24FC      1667            add     a,#0xfc
0691 F581      1668            mov     sp,a
0693 C006      1669            push    ar6
0695 C007      1670            push    ar7
0697 C000      1671            push    ar0
0699 C001      1672            push    ar1
069B 900000    1673            mov     dptr,#0x0000
069E 75F020    1674            mov     b,#0x20
06A1 7441      1675            mov     a,#0x41
06A3 120100    1676            lcall   ___fsmul
06A6 AE82      1677            mov     r6,dpl
06A8 AF83      1678            mov     r7,dph
06AA A8F0      1679            mov     r0,b
06AC F9        1680            mov     r1,a
06AD E581      1681            mov     a,sp
06AF 24FC      1682            add     a,#0xfc
06B1 F581      1683            mov     sp,a
06B3 8E82      1684            mov     dpl,r6
06B5 8F83      1685            mov     dph,r7
06B7 88F0      1686            mov     b,r0
06B9 E9        1687            mov     a,r1
06BA 120100    1688            lcall   ___fs2sint
06BD AE82      1689            mov     r6,dpl
06BF AF83      1690            mov     r7,dph
06C1 8E40      1691            mov     _main_forward_L_1_75,r6
06C3 8F41      1692            mov     (_main_forward_L_1_75 + 1),r7
06C5           1693   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:318: forward_R=(int)(((Vx-VxMid)/VxMid)*10);
06C5 8E90      1694            mov     _main_forward_R_1_75,r6
06C7 8F91      1695            mov     (_main_forward_R_1_75 + 1),r7
06C9 020100    1696            ljmp    L014040?
06CC           1697   L014030?:
06CC           1698   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:320: else if(Vx<VxMidLow && Vy>VyMidHigh) //back right
06CC C002      1699            push    ar2
06CE C003      1700            push    ar3
06D0 C004      1701            push    ar4
06D2 C005      1702            push    ar5
06D4 74E1      1703            mov     a,#0xE1
06D6 C0E0      1704            push    acc
06D8 747A      1705            mov     a,#0x7A
06DA C0E0      1706            push    acc
06DC 74D4      1707            mov     a,#0xD4
06DE C0E0      1708            push    acc
06E0 743F      1709            mov     a,#0x3F
06E2 C0E0      1710            push    acc
06E4 855082    1711            mov     dpl,_main_Vx_1_75
06E7 855183    1712            mov     dph,(_main_Vx_1_75 + 1)
06EA 8552F0    1713            mov     b,(_main_Vx_1_75 + 2)
06ED E553      1714            mov     a,(_main_Vx_1_75 + 3)
06EF 120100    1715            lcall   ___fslt
06F2 AE82      1716            mov     r6,dpl
06F4 E581      1717            mov     a,sp
06F6 24FC      1718            add     a,#0xfc
06F8 F581      1719            mov     sp,a
06FA D005      1720            pop     ar5
06FC D004      1721            pop     ar4
06FE D003      1722            pop     ar3
0700 D002      1723            pop     ar2
0702 EE        1724            mov     a,r6
0703 7001      1725            jnz     L014091?
0705 020100    1726            ljmp    L014026?
0708           1727   L014091?:
0708 C002      1728            push    ar2
070A C003      1729            push    ar3
070C C004      1730            push    ar4
070E C005      1731            push    ar5
0710 C006      1732            push    ar6
0712 74CD      1733            mov     a,#0xCD
0714 C0E0      1734            push    acc
0716 74CC      1735            mov     a,#0xCC
0718 C0E0      1736            push    acc
071A C0E0      1737            push    acc
071C 743F      1738            mov     a,#0x3F
071E C0E0      1739            push    acc
0720 8C82      1740            mov     dpl,r4
0722 8D83      1741            mov     dph,r5
0724 8AF0      1742            mov     b,r2
0726 EB        1743            mov     a,r3
0727 120100    1744            lcall   ___fsgt
072A AF82      1745            mov     r7,dpl
072C E581      1746            mov     a,sp
072E 24FC      1747            add     a,#0xfc
0730 F581      1748            mov     sp,a
0732 D006      1749            pop     ar6
0734 D005      1750            pop     ar5
0736 D004      1751            pop     ar4
0738 D003      1752            pop     ar3
073A D002      1753            pop     ar2
073C EF        1754            mov     a,r7
073D 7001      1755            jnz     L014092?
073F 020100    1756            ljmp    L014026?
0742           1757   L014092?:
0742           1758   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:322: backward_L=(int)(((VxMid-Vx)/VxMid)*10);
0742 C050      1759            push    _main_Vx_1_75
0744 C051      1760            push    (_main_Vx_1_75 + 1)
0746 C052      1761            push    (_main_Vx_1_75 + 2)
0748 C053      1762            push    (_main_Vx_1_75 + 3)
074A 90C28F    1763            mov     dptr,#0xC28F
074D 75F0D5    1764            mov     b,#0xD5
0750 743F      1765            mov     a,#0x3F
0752 120100    1766            lcall   ___fssub
0755 858210    1767            mov     _main_sloc1_1_0,dpl
0758 858311    1768            mov     (_main_sloc1_1_0 + 1),dph
075B 85F012    1769            mov     (_main_sloc1_1_0 + 2),b
075E F513      1770            mov     (_main_sloc1_1_0 + 3),a
0760 E581      1771            mov     a,sp
0762 24FC      1772            add     a,#0xfc
0764 F581      1773            mov     sp,a
0766 748F      1774            mov     a,#0x8F
0768 C0E0      1775            push    acc
076A 74C2      1776            mov     a,#0xC2
076C C0E0      1777            push    acc
076E 74D5      1778            mov     a,#0xD5
0770 C0E0      1779            push    acc
0772 743F      1780            mov     a,#0x3F
0774 C0E0      1781            push    acc
0776 851082    1782            mov     dpl,_main_sloc1_1_0
0779 851183    1783            mov     dph,(_main_sloc1_1_0 + 1)
077C 8512F0    1784            mov     b,(_main_sloc1_1_0 + 2)
077F E513      1785            mov     a,(_main_sloc1_1_0 + 3)
0781 120100    1786            lcall   ___fsdiv
0784 858210    1787            mov     _main_sloc1_1_0,dpl
0787 858311    1788            mov     (_main_sloc1_1_0 + 1),dph
078A 85F012    1789            mov     (_main_sloc1_1_0 + 2),b
078D F513      1790            mov     (_main_sloc1_1_0 + 3),a
078F E581      1791            mov     a,sp
0791 24FC      1792            add     a,#0xfc
0793 F581      1793            mov     sp,a
0795 C010      1794            push    _main_sloc1_1_0
0797 C011      1795            push    (_main_sloc1_1_0 + 1)
0799 C012      1796            push    (_main_sloc1_1_0 + 2)
079B C013      1797            push    (_main_sloc1_1_0 + 3)
079D 900000    1798            mov     dptr,#0x0000
07A0 75F020    1799            mov     b,#0x20
07A3 7441      1800            mov     a,#0x41
07A5 120100    1801            lcall   ___fsmul
07A8 858210    1802            mov     _main_sloc1_1_0,dpl
07AB 858311    1803            mov     (_main_sloc1_1_0 + 1),dph
07AE 85F012    1804            mov     (_main_sloc1_1_0 + 2),b
07B1 F513      1805            mov     (_main_sloc1_1_0 + 3),a
07B3 E581      1806            mov     a,sp
07B5 24FC      1807            add     a,#0xfc
07B7 F581      1808            mov     sp,a
07B9 851082    1809            mov     dpl,_main_sloc1_1_0
07BC 851183    1810            mov     dph,(_main_sloc1_1_0 + 1)
07BF 8512F0    1811            mov     b,(_main_sloc1_1_0 + 2)
07C2 E513      1812            mov     a,(_main_sloc1_1_0 + 3)
07C4 120100    1813            lcall   ___fs2sint
07C7 8582A0    1814            mov     _main_backward_L_1_75,dpl
07CA 8583A1    1815            mov     (_main_backward_L_1_75 + 1),dph
07CD           1816   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:323: backward_R=(int)((((VxMid-Vx)/VxMid)*10)/2.0);
07CD E4        1817            clr     a
07CE C0E0      1818            push    acc
07D0 C0E0      1819            push    acc
07D2 C0E0      1820            push    acc
07D4 7440      1821            mov     a,#0x40
07D6 C0E0      1822            push    acc
07D8 851082    1823            mov     dpl,_main_sloc1_1_0
07DB 851183    1824            mov     dph,(_main_sloc1_1_0 + 1)
07DE 8512F0    1825            mov     b,(_main_sloc1_1_0 + 2)
07E1 E513      1826            mov     a,(_main_sloc1_1_0 + 3)
07E3 120100    1827            lcall   ___fsdiv
07E6 858210    1828            mov     _main_sloc1_1_0,dpl
07E9 858311    1829            mov     (_main_sloc1_1_0 + 1),dph
07EC 85F012    1830            mov     (_main_sloc1_1_0 + 2),b
07EF F513      1831            mov     (_main_sloc1_1_0 + 3),a
07F1 E581      1832            mov     a,sp
07F3 24FC      1833            add     a,#0xfc
07F5 F581      1834            mov     sp,a
07F7 851082    1835            mov     dpl,_main_sloc1_1_0
07FA 851183    1836            mov     dph,(_main_sloc1_1_0 + 1)
07FD 8512F0    1837            mov     b,(_main_sloc1_1_0 + 2)
0800 E513      1838            mov     a,(_main_sloc1_1_0 + 3)
0802 120100    1839            lcall   ___fs2sint
0805 8582F0    1840            mov     _main_backward_R_1_75,dpl
0808 8583F1    1841            mov     (_main_backward_R_1_75 + 1),dph
080B           1842   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:324: forward_L=0;
080B           1843   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:325: forward_R=0;      
080B E4        1844            clr     a
080C F540      1845            mov     _main_forward_L_1_75,a
080E F541      1846            mov     (_main_forward_L_1_75 + 1),a
0810 F590      1847            mov     _main_forward_R_1_75,a
0812 F591      1848            mov     (_main_forward_R_1_75 + 1),a
0814 020100    1849            ljmp    L014040?
0817           1850   L014026?:
0817           1851   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:327: else if(Vx<VxMidLow && Vy<VyMidLow)  //back left
0817 EE        1852            mov     a,r6
0818 7001      1853            jnz     L014093?
081A 020100    1854            ljmp    L014022?
081D           1855   L014093?:
081D C002      1856            push    ar2
081F C003      1857            push    ar3
0821 C004      1858            push    ar4
0823 C005      1859            push    ar5
0825 C006      1860            push    ar6
0827 7471      1861            mov     a,#0x71
0829 C0E0      1862            push    acc
082B 743D      1863            mov     a,#0x3D
082D C0E0      1864            push    acc
082F 74CA      1865            mov     a,#0xCA
0831 C0E0      1866            push    acc
0833 743F      1867            mov     a,#0x3F
0835 C0E0      1868            push    acc
0837 8C82      1869            mov     dpl,r4
0839 8D83      1870            mov     dph,r5
083B 8AF0      1871            mov     b,r2
083D EB        1872            mov     a,r3
083E 120100    1873            lcall   ___fslt
0841 AF82      1874            mov     r7,dpl
0843 E581      1875            mov     a,sp
0845 24FC      1876            add     a,#0xfc
0847 F581      1877            mov     sp,a
0849 D006      1878            pop     ar6
084B D005      1879            pop     ar5
084D D004      1880            pop     ar4
084F D003      1881            pop     ar3
0851 D002      1882            pop     ar2
0853 EF        1883            mov     a,r7
0854 7001      1884            jnz     L014094?
0856 020100    1885            ljmp    L014022?
0859           1886   L014094?:
0859           1887   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:329: backward_L=(int)((((VxMid-Vx)/VxMid)*10)/2.0);
0859 C050      1888            push    _main_Vx_1_75
085B C051      1889            push    (_main_Vx_1_75 + 1)
085D C052      1890            push    (_main_Vx_1_75 + 2)
085F C053      1891            push    (_main_Vx_1_75 + 3)
0861 90C28F    1892            mov     dptr,#0xC28F
0864 75F0D5    1893            mov     b,#0xD5
0867 743F      1894            mov     a,#0x3F
0869 120100    1895            lcall   ___fssub
086C 858210    1896            mov     _main_sloc1_1_0,dpl
086F 858311    1897            mov     (_main_sloc1_1_0 + 1),dph
0872 85F012    1898            mov     (_main_sloc1_1_0 + 2),b
0875 F513      1899            mov     (_main_sloc1_1_0 + 3),a
0877 E581      1900            mov     a,sp
0879 24FC      1901            add     a,#0xfc
087B F581      1902            mov     sp,a
087D 748F      1903            mov     a,#0x8F
087F C0E0      1904            push    acc
0881 74C2      1905            mov     a,#0xC2
0883 C0E0      1906            push    acc
0885 74D5      1907            mov     a,#0xD5
0887 C0E0      1908            push    acc
0889 743F      1909            mov     a,#0x3F
088B C0E0      1910            push    acc
088D 851082    1911            mov     dpl,_main_sloc1_1_0
0890 851183    1912            mov     dph,(_main_sloc1_1_0 + 1)
0893 8512F0    1913            mov     b,(_main_sloc1_1_0 + 2)
0896 E513      1914            mov     a,(_main_sloc1_1_0 + 3)
0898 120100    1915            lcall   ___fsdiv
089B 858210    1916            mov     _main_sloc1_1_0,dpl
089E 858311    1917            mov     (_main_sloc1_1_0 + 1),dph
08A1 85F012    1918            mov     (_main_sloc1_1_0 + 2),b
08A4 F513      1919            mov     (_main_sloc1_1_0 + 3),a
08A6 E581      1920            mov     a,sp
08A8 24FC      1921            add     a,#0xfc
08AA F581      1922            mov     sp,a
08AC C010      1923            push    _main_sloc1_1_0
08AE C011      1924            push    (_main_sloc1_1_0 + 1)
08B0 C012      1925            push    (_main_sloc1_1_0 + 2)
08B2 C013      1926            push    (_main_sloc1_1_0 + 3)
08B4 900000    1927            mov     dptr,#0x0000
08B7 75F020    1928            mov     b,#0x20
08BA 7441      1929            mov     a,#0x41
08BC 120100    1930            lcall   ___fsmul
08BF 858210    1931            mov     _main_sloc1_1_0,dpl
08C2 858311    1932            mov     (_main_sloc1_1_0 + 1),dph
08C5 85F012    1933            mov     (_main_sloc1_1_0 + 2),b
08C8 F513      1934            mov     (_main_sloc1_1_0 + 3),a
08CA E581      1935            mov     a,sp
08CC 24FC      1936            add     a,#0xfc
08CE F581      1937            mov     sp,a
08D0 E4        1938            clr     a
08D1 C0E0      1939            push    acc
08D3 C0E0      1940            push    acc
08D5 C0E0      1941            push    acc
08D7 7440      1942            mov     a,#0x40
08D9 C0E0      1943            push    acc
08DB 851082    1944            mov     dpl,_main_sloc1_1_0
08DE 851183    1945            mov     dph,(_main_sloc1_1_0 + 1)
08E1 8512F0    1946            mov     b,(_main_sloc1_1_0 + 2)
08E4 E513      1947            mov     a,(_main_sloc1_1_0 + 3)
08E6 120100    1948            lcall   ___fsdiv
08E9 8582D0    1949            mov     _main_sloc0_1_0,dpl
08EC 8583D1    1950            mov     (_main_sloc0_1_0 + 1),dph
08EF 85F0D2    1951            mov     (_main_sloc0_1_0 + 2),b
08F2 F5D3      1952            mov     (_main_sloc0_1_0 + 3),a
08F4 E581      1953            mov     a,sp
08F6 24FC      1954            add     a,#0xfc
08F8 F581      1955            mov     sp,a
08FA 85D082    1956            mov     dpl,_main_sloc0_1_0
08FD 85D183    1957            mov     dph,(_main_sloc0_1_0 + 1)
0900 85D2F0    1958            mov     b,(_main_sloc0_1_0 + 2)
0903 E5D3      1959            mov     a,(_main_sloc0_1_0 + 3)
0905 120100    1960            lcall   ___fs2sint
0908 8582A0    1961            mov     _main_backward_L_1_75,dpl
090B 8583A1    1962            mov     (_main_backward_L_1_75 + 1),dph
090E           1963   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:330: backward_R=(int)(((VxMid-Vx)/VxMid)*10);
090E 851082    1964            mov     dpl,_main_sloc1_1_0
0911 851183    1965            mov     dph,(_main_sloc1_1_0 + 1)
0914 8512F0    1966            mov     b,(_main_sloc1_1_0 + 2)
0917 E513      1967            mov     a,(_main_sloc1_1_0 + 3)
0919 120100    1968            lcall   ___fs2sint
091C 8582F0    1969            mov     _main_backward_R_1_75,dpl
091F 8583F1    1970            mov     (_main_backward_R_1_75 + 1),dph
0922           1971   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:331: forward_L=0;
0922           1972   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:332: forward_R=0;
0922 E4        1973            clr     a
0923 F540      1974            mov     _main_forward_L_1_75,a
0925 F541      1975            mov     (_main_forward_L_1_75 + 1),a
0927 F590      1976            mov     _main_forward_R_1_75,a
0929 F591      1977            mov     (_main_forward_R_1_75 + 1),a
092B 020100    1978            ljmp    L014040?
092E           1979   L014022?:
092E           1980   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:334: else if(Vx<VxMidLow && Vy>VyMidLow && Vy<VyMidHigh) //backward
092E EE        1981            mov     a,r6
092F 7001      1982            jnz     L014095?
0931 020100    1983            ljmp    L014017?
0934           1984   L014095?:
0934 C002      1985            push    ar2
0936 C003      1986            push    ar3
0938 C004      1987            push    ar4
093A C005      1988            push    ar5
093C 7471      1989            mov     a,#0x71
093E C0E0      1990            push    acc
0940 743D      1991            mov     a,#0x3D
0942 C0E0      1992            push    acc
0944 74CA      1993            mov     a,#0xCA
0946 C0E0      1994            push    acc
0948 743F      1995            mov     a,#0x3F
094A C0E0      1996            push    acc
094C 8C82      1997            mov     dpl,r4
094E 8D83      1998            mov     dph,r5
0950 8AF0      1999            mov     b,r2
0952 EB        2000            mov     a,r3
0953 120100    2001            lcall   ___fsgt
0956 AE82      2002            mov     r6,dpl
0958 E581      2003            mov     a,sp
095A 24FC      2004            add     a,#0xfc
095C F581      2005            mov     sp,a
095E D005      2006            pop     ar5
0960 D004      2007            pop     ar4
0962 D003      2008            pop     ar3
0964 D002      2009            pop     ar2
0966 EE        2010            mov     a,r6
0967 7001      2011            jnz     L014096?
0969 020100    2012            ljmp    L014017?
096C           2013   L014096?:
096C C002      2014            push    ar2
096E C003      2015            push    ar3
0970 C004      2016            push    ar4
0972 C005      2017            push    ar5
0974 74CD      2018            mov     a,#0xCD
0976 C0E0      2019            push    acc
0978 74CC      2020            mov     a,#0xCC
097A C0E0      2021            push    acc
097C C0E0      2022            push    acc
097E 743F      2023            mov     a,#0x3F
0980 C0E0      2024            push    acc
0982 8C82      2025            mov     dpl,r4
0984 8D83      2026            mov     dph,r5
0986 8AF0      2027            mov     b,r2
0988 EB        2028            mov     a,r3
0989 120100    2029            lcall   ___fslt
098C AE82      2030            mov     r6,dpl
098E E581      2031            mov     a,sp
0990 24FC      2032            add     a,#0xfc
0992 F581      2033            mov     sp,a
0994 D005      2034            pop     ar5
0996 D004      2035            pop     ar4
0998 D003      2036            pop     ar3
099A D002      2037            pop     ar2
099C EE        2038            mov     a,r6
099D 7001      2039            jnz     L014097?
099F 020100    2040            ljmp    L014017?
09A2           2041   L014097?:
09A2           2042   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:336: backward_L=(int)(((VxMid-Vx)/VxMid)*10);
09A2 C050      2043            push    _main_Vx_1_75
09A4 C051      2044            push    (_main_Vx_1_75 + 1)
09A6 C052      2045            push    (_main_Vx_1_75 + 2)
09A8 C053      2046            push    (_main_Vx_1_75 + 3)
09AA 90C28F    2047            mov     dptr,#0xC28F
09AD 75F0D5    2048            mov     b,#0xD5
09B0 743F      2049            mov     a,#0x3F
09B2 120100    2050            lcall   ___fssub
09B5 AE82      2051            mov     r6,dpl
09B7 AF83      2052            mov     r7,dph
09B9 A8F0      2053            mov     r0,b
09BB F9        2054            mov     r1,a
09BC E581      2055            mov     a,sp
09BE 24FC      2056            add     a,#0xfc
09C0 F581      2057            mov     sp,a
09C2 748F      2058            mov     a,#0x8F
09C4 C0E0      2059            push    acc
09C6 74C2      2060            mov     a,#0xC2
09C8 C0E0      2061            push    acc
09CA 74D5      2062            mov     a,#0xD5
09CC C0E0      2063            push    acc
09CE 743F      2064            mov     a,#0x3F
09D0 C0E0      2065            push    acc
09D2 8E82      2066            mov     dpl,r6
09D4 8F83      2067            mov     dph,r7
09D6 88F0      2068            mov     b,r0
09D8 E9        2069            mov     a,r1
09D9 120100    2070            lcall   ___fsdiv
09DC AE82      2071            mov     r6,dpl
09DE AF83      2072            mov     r7,dph
09E0 A8F0      2073            mov     r0,b
09E2 F9        2074            mov     r1,a
09E3 E581      2075            mov     a,sp
09E5 24FC      2076            add     a,#0xfc
09E7 F581      2077            mov     sp,a
09E9 C006      2078            push    ar6
09EB C007      2079            push    ar7
09ED C000      2080            push    ar0
09EF C001      2081            push    ar1
09F1 900000    2082            mov     dptr,#0x0000
09F4 75F020    2083            mov     b,#0x20
09F7 7441      2084            mov     a,#0x41
09F9 120100    2085            lcall   ___fsmul
09FC AE82      2086            mov     r6,dpl
09FE AF83      2087            mov     r7,dph
0A00 A8F0      2088            mov     r0,b
0A02 F9        2089            mov     r1,a
0A03 E581      2090            mov     a,sp
0A05 24FC      2091            add     a,#0xfc
0A07 F581      2092            mov     sp,a
0A09 8E82      2093            mov     dpl,r6
0A0B 8F83      2094            mov     dph,r7
0A0D 88F0      2095            mov     b,r0
0A0F E9        2096            mov     a,r1
0A10 120100    2097            lcall   ___fs2sint
0A13 AE82      2098            mov     r6,dpl
0A15 AF83      2099            mov     r7,dph
0A17 8EA0      2100            mov     _main_backward_L_1_75,r6
0A19 8FA1      2101            mov     (_main_backward_L_1_75 + 1),r7
0A1B           2102   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:337: backward_R=(int)(((VxMid-Vx)/VxMid)*10);
0A1B 8EF0      2103            mov     _main_backward_R_1_75,r6
0A1D 8FF1      2104            mov     (_main_backward_R_1_75 + 1),r7
0A1F           2105   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:338: forward_L=0;
0A1F           2106   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:339: forward_R=0;              
0A1F E4        2107            clr     a
0A20 F540      2108            mov     _main_forward_L_1_75,a
0A22 F541      2109            mov     (_main_forward_L_1_75 + 1),a
0A24 F590      2110            mov     _main_forward_R_1_75,a
0A26 F591      2111            mov     (_main_forward_R_1_75 + 1),a
0A28 020100    2112            ljmp    L014040?
0A2B           2113   L014017?:
0A2B           2114   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:341: else if(Vx<VxMidHigh && Vx>VxMidLow && Vy>VyMidHigh) // right
0A2B C002      2115            push    ar2
0A2D C003      2116            push    ar3
0A2F C004      2117            push    ar4
0A31 C005      2118            push    ar5
0A33 743D      2119            mov     a,#0x3D
0A35 C0E0      2120            push    acc
0A37 740A      2121            mov     a,#0x0A
0A39 C0E0      2122            push    acc
0A3B 74D7      2123            mov     a,#0xD7
0A3D C0E0      2124            push    acc
0A3F 743F      2125            mov     a,#0x3F
0A41 C0E0      2126            push    acc
0A43 855082    2127            mov     dpl,_main_Vx_1_75
0A46 855183    2128            mov     dph,(_main_Vx_1_75 + 1)
0A49 8552F0    2129            mov     b,(_main_Vx_1_75 + 2)
0A4C E553      2130            mov     a,(_main_Vx_1_75 + 3)
0A4E 120100    2131            lcall   ___fslt
0A51 AE82      2132            mov     r6,dpl
0A53 E581      2133            mov     a,sp
0A55 24FC      2134            add     a,#0xfc
0A57 F581      2135            mov     sp,a
0A59 D005      2136            pop     ar5
0A5B D004      2137            pop     ar4
0A5D D003      2138            pop     ar3
0A5F D002      2139            pop     ar2
0A61 EE        2140            mov     a,r6
0A62 7001      2141            jnz     L014098?
0A64 020100    2142            ljmp    L014012?
0A67           2143   L014098?:
0A67 C002      2144            push    ar2
0A69 C003      2145            push    ar3
0A6B C004      2146            push    ar4
0A6D C005      2147            push    ar5
0A6F C006      2148            push    ar6
0A71 74E1      2149            mov     a,#0xE1
0A73 C0E0      2150            push    acc
0A75 747A      2151            mov     a,#0x7A
0A77 C0E0      2152            push    acc
0A79 74D4      2153            mov     a,#0xD4
0A7B C0E0      2154            push    acc
0A7D 743F      2155            mov     a,#0x3F
0A7F C0E0      2156            push    acc
0A81 855082    2157            mov     dpl,_main_Vx_1_75
0A84 855183    2158            mov     dph,(_main_Vx_1_75 + 1)
0A87 8552F0    2159            mov     b,(_main_Vx_1_75 + 2)
0A8A E553      2160            mov     a,(_main_Vx_1_75 + 3)
0A8C 120100    2161            lcall   ___fsgt
0A8F AF82      2162            mov     r7,dpl
0A91 E581      2163            mov     a,sp
0A93 24FC      2164            add     a,#0xfc
0A95 F581      2165            mov     sp,a
0A97 D006      2166            pop     ar6
0A99 D005      2167            pop     ar5
0A9B D004      2168            pop     ar4
0A9D D003      2169            pop     ar3
0A9F D002      2170            pop     ar2
0AA1 EF        2171            mov     a,r7
0AA2 7001      2172            jnz     L014099?
0AA4 020100    2173            ljmp    L014012?
0AA7           2174   L014099?:
0AA7 C002      2175            push    ar2
0AA9 C003      2176            push    ar3
0AAB C004      2177            push    ar4
0AAD C005      2178            push    ar5
0AAF C006      2179            push    ar6
0AB1 74CD      2180            mov     a,#0xCD
0AB3 C0E0      2181            push    acc
0AB5 74CC      2182            mov     a,#0xCC
0AB7 C0E0      2183            push    acc
0AB9 C0E0      2184            push    acc
0ABB 743F      2185            mov     a,#0x3F
0ABD C0E0      2186            push    acc
0ABF 8C82      2187            mov     dpl,r4
0AC1 8D83      2188            mov     dph,r5
0AC3 8AF0      2189            mov     b,r2
0AC5 EB        2190            mov     a,r3
0AC6 120100    2191            lcall   ___fsgt
0AC9 AF82      2192            mov     r7,dpl
0ACB E581      2193            mov     a,sp
0ACD 24FC      2194            add     a,#0xfc
0ACF F581      2195            mov     sp,a
0AD1 D006      2196            pop     ar6
0AD3 D005      2197            pop     ar5
0AD5 D004      2198            pop     ar4
0AD7 D003      2199            pop     ar3
0AD9 D002      2200            pop     ar2
0ADB EF        2201            mov     a,r7
0ADC 7001      2202            jnz     L014100?
0ADE 020100    2203            ljmp    L014012?
0AE1           2204   L014100?:
0AE1           2205   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:343: backward_L=0;
0AE1           2206   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:344: backward_R=0;
0AE1 E4        2207            clr     a
0AE2 F5A0      2208            mov     _main_backward_L_1_75,a
0AE4 F5A1      2209            mov     (_main_backward_L_1_75 + 1),a
0AE6 F5F0      2210            mov     _main_backward_R_1_75,a
0AE8 F5F1      2211            mov     (_main_backward_R_1_75 + 1),a
0AEA           2212   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:345: forward_L=(int)(((Vy-VyMid)/VyMid)*10);
0AEA 741F      2213            mov     a,#0x1F
0AEC C0E0      2214            push    acc
0AEE 7485      2215            mov     a,#0x85
0AF0 C0E0      2216            push    acc
0AF2 74CB      2217            mov     a,#0xCB
0AF4 C0E0      2218            push    acc
0AF6 743F      2219            mov     a,#0x3F
0AF8 C0E0      2220            push    acc
0AFA 8C82      2221            mov     dpl,r4
0AFC 8D83      2222            mov     dph,r5
0AFE 8AF0      2223            mov     b,r2
0B00 EB        2224            mov     a,r3
0B01 120100    2225            lcall   ___fssub
0B04 858210    2226            mov     _main_sloc1_1_0,dpl
0B07 858311    2227            mov     (_main_sloc1_1_0 + 1),dph
0B0A 85F012    2228            mov     (_main_sloc1_1_0 + 2),b
0B0D F513      2229            mov     (_main_sloc1_1_0 + 3),a
0B0F E581      2230            mov     a,sp
0B11 24FC      2231            add     a,#0xfc
0B13 F581      2232            mov     sp,a
0B15 741F      2233            mov     a,#0x1F
0B17 C0E0      2234            push    acc
0B19 7485      2235            mov     a,#0x85
0B1B C0E0      2236            push    acc
0B1D 74CB      2237            mov     a,#0xCB
0B1F C0E0      2238            push    acc
0B21 743F      2239            mov     a,#0x3F
0B23 C0E0      2240            push    acc
0B25 851082    2241            mov     dpl,_main_sloc1_1_0
0B28 851183    2242            mov     dph,(_main_sloc1_1_0 + 1)
0B2B 8512F0    2243            mov     b,(_main_sloc1_1_0 + 2)
0B2E E513      2244            mov     a,(_main_sloc1_1_0 + 3)
0B30 120100    2245            lcall   ___fsdiv
0B33 858210    2246            mov     _main_sloc1_1_0,dpl
0B36 858311    2247            mov     (_main_sloc1_1_0 + 1),dph
0B39 85F012    2248            mov     (_main_sloc1_1_0 + 2),b
0B3C F513      2249            mov     (_main_sloc1_1_0 + 3),a
0B3E E581      2250            mov     a,sp
0B40 24FC      2251            add     a,#0xfc
0B42 F581      2252            mov     sp,a
0B44 C010      2253            push    _main_sloc1_1_0
0B46 C011      2254            push    (_main_sloc1_1_0 + 1)
0B48 C012      2255            push    (_main_sloc1_1_0 + 2)
0B4A C013      2256            push    (_main_sloc1_1_0 + 3)
0B4C 900000    2257            mov     dptr,#0x0000
0B4F 75F020    2258            mov     b,#0x20
0B52 7441      2259            mov     a,#0x41
0B54 120100    2260            lcall   ___fsmul
0B57 858210    2261            mov     _main_sloc1_1_0,dpl
0B5A 858311    2262            mov     (_main_sloc1_1_0 + 1),dph
0B5D 85F012    2263            mov     (_main_sloc1_1_0 + 2),b
0B60 F513      2264            mov     (_main_sloc1_1_0 + 3),a
0B62 E581      2265            mov     a,sp
0B64 24FC      2266            add     a,#0xfc
0B66 F581      2267            mov     sp,a
0B68 851082    2268            mov     dpl,_main_sloc1_1_0
0B6B 851183    2269            mov     dph,(_main_sloc1_1_0 + 1)
0B6E 8512F0    2270            mov     b,(_main_sloc1_1_0 + 2)
0B71 E513      2271            mov     a,(_main_sloc1_1_0 + 3)
0B73 120100    2272            lcall   ___fs2sint
0B76 858240    2273            mov     _main_forward_L_1_75,dpl
0B79 858341    2274            mov     (_main_forward_L_1_75 + 1),dph
0B7C           2275   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:346: forward_R=0;
0B7C E4        2276            clr     a
0B7D F590      2277            mov     _main_forward_R_1_75,a
0B7F F591      2278            mov     (_main_forward_R_1_75 + 1),a
0B81 020100    2279            ljmp    L014040?
0B84           2280   L014012?:
0B84           2281   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:348: else if(Vx<VxMidHigh && Vx>VxMidLow && Vy<VyMidLow) // left
0B84 EE        2282            mov     a,r6
0B85 7001      2283            jnz     L014101?
0B87 020100    2284            ljmp    L014007?
0B8A           2285   L014101?:
0B8A C002      2286            push    ar2
0B8C C003      2287            push    ar3
0B8E C004      2288            push    ar4
0B90 C005      2289            push    ar5
0B92 C006      2290            push    ar6
0B94 74E1      2291            mov     a,#0xE1
0B96 C0E0      2292            push    acc
0B98 747A      2293            mov     a,#0x7A
0B9A C0E0      2294            push    acc
0B9C 74D4      2295            mov     a,#0xD4
0B9E C0E0      2296            push    acc
0BA0 743F      2297            mov     a,#0x3F
0BA2 C0E0      2298            push    acc
0BA4 855082    2299            mov     dpl,_main_Vx_1_75
0BA7 855183    2300            mov     dph,(_main_Vx_1_75 + 1)
0BAA 8552F0    2301            mov     b,(_main_Vx_1_75 + 2)
0BAD E553      2302            mov     a,(_main_Vx_1_75 + 3)
0BAF 120100    2303            lcall   ___fsgt
0BB2 AF82      2304            mov     r7,dpl
0BB4 E581      2305            mov     a,sp
0BB6 24FC      2306            add     a,#0xfc
0BB8 F581      2307            mov     sp,a
0BBA D006      2308            pop     ar6
0BBC D005      2309            pop     ar5
0BBE D004      2310            pop     ar4
0BC0 D003      2311            pop     ar3
0BC2 D002      2312            pop     ar2
0BC4 EF        2313            mov     a,r7
0BC5 7001      2314            jnz     L014102?
0BC7 020100    2315            ljmp    L014007?
0BCA           2316   L014102?:
0BCA C002      2317            push    ar2
0BCC C003      2318            push    ar3
0BCE C004      2319            push    ar4
0BD0 C005      2320            push    ar5
0BD2 C006      2321            push    ar6
0BD4 7471      2322            mov     a,#0x71
0BD6 C0E0      2323            push    acc
0BD8 743D      2324            mov     a,#0x3D
0BDA C0E0      2325            push    acc
0BDC 74CA      2326            mov     a,#0xCA
0BDE C0E0      2327            push    acc
0BE0 743F      2328            mov     a,#0x3F
0BE2 C0E0      2329            push    acc
0BE4 8C82      2330            mov     dpl,r4
0BE6 8D83      2331            mov     dph,r5
0BE8 8AF0      2332            mov     b,r2
0BEA EB        2333            mov     a,r3
0BEB 120100    2334            lcall   ___fslt
0BEE AF82      2335            mov     r7,dpl
0BF0 E581      2336            mov     a,sp
0BF2 24FC      2337            add     a,#0xfc
0BF4 F581      2338            mov     sp,a
0BF6 D006      2339            pop     ar6
0BF8 D005      2340            pop     ar5
0BFA D004      2341            pop     ar4
0BFC D003      2342            pop     ar3
0BFE D002      2343            pop     ar2
0C00 EF        2344            mov     a,r7
0C01 7001      2345            jnz     L014103?
0C03 020100    2346            ljmp    L014007?
0C06           2347   L014103?:
0C06           2348   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:350: backward_L=0;
0C06           2349   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:351: backward_R=0;
0C06           2350   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:352: forward_L=0;
0C06 E4        2351            clr     a
0C07 F5A0      2352            mov     _main_backward_L_1_75,a
0C09 F5A1      2353            mov     (_main_backward_L_1_75 + 1),a
0C0B F5F0      2354            mov     _main_backward_R_1_75,a
0C0D F5F1      2355            mov     (_main_backward_R_1_75 + 1),a
0C0F F540      2356            mov     _main_forward_L_1_75,a
0C11 F541      2357            mov     (_main_forward_L_1_75 + 1),a
0C13           2358   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:353: forward_R=(int)(((VyMid-Vy)/VyMid)*10);           
0C13 C004      2359            push    ar4
0C15 C005      2360            push    ar5
0C17 C002      2361            push    ar2
0C19 C003      2362            push    ar3
0C1B 90851F    2363            mov     dptr,#0x851F
0C1E 75F0CB    2364            mov     b,#0xCB
0C21 743F      2365            mov     a,#0x3F
0C23 120100    2366            lcall   ___fssub
0C26 858210    2367            mov     _main_sloc1_1_0,dpl
0C29 858311    2368            mov     (_main_sloc1_1_0 + 1),dph
0C2C 85F012    2369            mov     (_main_sloc1_1_0 + 2),b
0C2F F513      2370            mov     (_main_sloc1_1_0 + 3),a
0C31 E581      2371            mov     a,sp
0C33 24FC      2372            add     a,#0xfc
0C35 F581      2373            mov     sp,a
0C37 741F      2374            mov     a,#0x1F
0C39 C0E0      2375            push    acc
0C3B 7485      2376            mov     a,#0x85
0C3D C0E0      2377            push    acc
0C3F 74CB      2378            mov     a,#0xCB
0C41 C0E0      2379            push    acc
0C43 743F      2380            mov     a,#0x3F
0C45 C0E0      2381            push    acc
0C47 851082    2382            mov     dpl,_main_sloc1_1_0
0C4A 851183    2383            mov     dph,(_main_sloc1_1_0 + 1)
0C4D 8512F0    2384            mov     b,(_main_sloc1_1_0 + 2)
0C50 E513      2385            mov     a,(_main_sloc1_1_0 + 3)
0C52 120100    2386            lcall   ___fsdiv
0C55 858210    2387            mov     _main_sloc1_1_0,dpl
0C58 858311    2388            mov     (_main_sloc1_1_0 + 1),dph
0C5B 85F012    2389            mov     (_main_sloc1_1_0 + 2),b
0C5E F513      2390            mov     (_main_sloc1_1_0 + 3),a
0C60 E581      2391            mov     a,sp
0C62 24FC      2392            add     a,#0xfc
0C64 F581      2393            mov     sp,a
0C66 C010      2394            push    _main_sloc1_1_0
0C68 C011      2395            push    (_main_sloc1_1_0 + 1)
0C6A C012      2396            push    (_main_sloc1_1_0 + 2)
0C6C C013      2397            push    (_main_sloc1_1_0 + 3)
0C6E 900000    2398            mov     dptr,#0x0000
0C71 75F020    2399            mov     b,#0x20
0C74 7441      2400            mov     a,#0x41
0C76 120100    2401            lcall   ___fsmul
0C79 858210    2402            mov     _main_sloc1_1_0,dpl
0C7C 858311    2403            mov     (_main_sloc1_1_0 + 1),dph
0C7F 85F012    2404            mov     (_main_sloc1_1_0 + 2),b
0C82 F513      2405            mov     (_main_sloc1_1_0 + 3),a
0C84 E581      2406            mov     a,sp
0C86 24FC      2407            add     a,#0xfc
0C88 F581      2408            mov     sp,a
0C8A 851082    2409            mov     dpl,_main_sloc1_1_0
0C8D 851183    2410            mov     dph,(_main_sloc1_1_0 + 1)
0C90 8512F0    2411            mov     b,(_main_sloc1_1_0 + 2)
0C93 E513      2412            mov     a,(_main_sloc1_1_0 + 3)
0C95 120100    2413            lcall   ___fs2sint
0C98 858290    2414            mov     _main_forward_R_1_75,dpl
0C9B 858391    2415            mov     (_main_forward_R_1_75 + 1),dph
0C9E 020100    2416            ljmp    L014040?
0CA1           2417   L014007?:
0CA1           2418   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:355: else if(Vx<VxMidHigh && Vx>VxMidLow && Vy>VyMidLow && Vy<VyMidHigh) // stop
0CA1 EE        2419            mov     a,r6
0CA2 7001      2420            jnz     L014104?
0CA4 020100    2421            ljmp    L014040?
0CA7           2422   L014104?:
0CA7 C002      2423            push    ar2
0CA9 C003      2424            push    ar3
0CAB C004      2425            push    ar4
0CAD C005      2426            push    ar5
0CAF 74E1      2427            mov     a,#0xE1
0CB1 C0E0      2428            push    acc
0CB3 747A      2429            mov     a,#0x7A
0CB5 C0E0      2430            push    acc
0CB7 74D4      2431            mov     a,#0xD4
0CB9 C0E0      2432            push    acc
0CBB 743F      2433            mov     a,#0x3F
0CBD C0E0      2434            push    acc
0CBF 855082    2435            mov     dpl,_main_Vx_1_75
0CC2 855183    2436            mov     dph,(_main_Vx_1_75 + 1)
0CC5 8552F0    2437            mov     b,(_main_Vx_1_75 + 2)
0CC8 E553      2438            mov     a,(_main_Vx_1_75 + 3)
0CCA 120100    2439            lcall   ___fsgt
0CCD AE82      2440            mov     r6,dpl
0CCF E581      2441            mov     a,sp
0CD1 24FC      2442            add     a,#0xfc
0CD3 F581      2443            mov     sp,a
0CD5 D005      2444            pop     ar5
0CD7 D004      2445            pop     ar4
0CD9 D003      2446            pop     ar3
0CDB D002      2447            pop     ar2
0CDD EE        2448            mov     a,r6
0CDE 6001      2449            jz      L014040?
0CE0 C002      2450            push    ar2
0CE2 C003      2451            push    ar3
0CE4 C004      2452            push    ar4
0CE6 C005      2453            push    ar5
0CE8 7471      2454            mov     a,#0x71
0CEA C0E0      2455            push    acc
0CEC 743D      2456            mov     a,#0x3D
0CEE C0E0      2457            push    acc
0CF0 74CA      2458            mov     a,#0xCA
0CF2 C0E0      2459            push    acc
0CF4 743F      2460            mov     a,#0x3F
0CF6 C0E0      2461            push    acc
0CF8 8C82      2462            mov     dpl,r4
0CFA 8D83      2463            mov     dph,r5
0CFC 8AF0      2464            mov     b,r2
0CFE EB        2465            mov     a,r3
0CFF 120100    2466            lcall   ___fsgt
0D02 AE82      2467            mov     r6,dpl
0D04 E581      2468            mov     a,sp
0D06 24FC      2469            add     a,#0xfc
0D08 F581      2470            mov     sp,a
0D0A D005      2471            pop     ar5
0D0C D004      2472            pop     ar4
0D0E D003      2473            pop     ar3
0D10 D002      2474            pop     ar2
0D12 EE        2475            mov     a,r6
0D13 6001      2476            jz      L014040?
0D15 74CD      2477            mov     a,#0xCD
0D17 C0E0      2478            push    acc
0D19 74CC      2479            mov     a,#0xCC
0D1B C0E0      2480            push    acc
0D1D C0E0      2481            push    acc
0D1F 743F      2482            mov     a,#0x3F
0D21 C0E0      2483            push    acc
0D23 8C82      2484            mov     dpl,r4
0D25 8D83      2485            mov     dph,r5
0D27 8AF0      2486            mov     b,r2
0D29 EB        2487            mov     a,r3
0D2A 120100    2488            lcall   ___fslt
0D2D AA82      2489            mov     r2,dpl
0D2F E581      2490            mov     a,sp
0D31 24FC      2491            add     a,#0xfc
0D33 F581      2492            mov     sp,a
0D35 EA        2493            mov     a,r2
0D36 6001      2494            jz      L014040?
0D38           2495   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:357: backward_L=0;
0D38           2496   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:358: backward_R=0;
0D38           2497   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:359: forward_L=0;
0D38           2498   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:360: forward_R=0;              
0D38 E4        2499            clr     a
0D39 F5A0      2500            mov     _main_backward_L_1_75,a
0D3B F5A1      2501            mov     (_main_backward_L_1_75 + 1),a
0D3D F5F0      2502            mov     _main_backward_R_1_75,a
0D3F F5F1      2503            mov     (_main_backward_R_1_75 + 1),a
0D41 F540      2504            mov     _main_forward_L_1_75,a
0D43 F541      2505            mov     (_main_forward_L_1_75 + 1),a
0D45 F590      2506            mov     _main_forward_R_1_75,a
0D47 F591      2507            mov     (_main_forward_R_1_75 + 1),a
0D49           2508   L014040?:
0D49           2509   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:362: if (backward_L>10)
0D49 C3        2510            clr     c
0D4A 740A      2511            mov     a,#0x0A
0D4C 95A0      2512            subb    a,_main_backward_L_1_75
0D4E E4        2513            clr     a
0D4F 95A1      2514            subb    a,(_main_backward_L_1_75 + 1)
0D51 5001      2515            jnc     L014043?
0D53           2516   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:363: backward_L = 10;
0D53 75A00A    2517            mov     _main_backward_L_1_75,#0x0A
0D56 E4        2518            clr     a
0D57 F5A1      2519            mov     (_main_backward_L_1_75 + 1),a
0D59           2520   L014043?:
0D59           2521   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:364: if (backward_R>10)
0D59 C3        2522            clr     c
0D5A 740A      2523            mov     a,#0x0A
0D5C 95F0      2524            subb    a,_main_backward_R_1_75
0D5E E4        2525            clr     a
0D5F 95F1      2526            subb    a,(_main_backward_R_1_75 + 1)
0D61 5001      2527            jnc     L014045?
0D63           2528   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:365: backward_R = 10;
0D63 75F00A    2529            mov     _main_backward_R_1_75,#0x0A
0D66 E4        2530            clr     a
0D67 F5F1      2531            mov     (_main_backward_R_1_75 + 1),a
0D69           2532   L014045?:
0D69           2533   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:366: if (forward_L>10)
0D69 C3        2534            clr     c
0D6A 740A      2535            mov     a,#0x0A
0D6C 9540      2536            subb    a,_main_forward_L_1_75
0D6E E4        2537            clr     a
0D6F 9541      2538            subb    a,(_main_forward_L_1_75 + 1)
0D71 5001      2539            jnc     L014047?
0D73           2540   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:367: forward_L = 10;
0D73 75400A    2541            mov     _main_forward_L_1_75,#0x0A
0D76 E4        2542            clr     a
0D77 F541      2543            mov     (_main_forward_L_1_75 + 1),a
0D79           2544   L014047?:
0D79           2545   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:368: if (forward_R>10)
0D79 C3        2546            clr     c
0D7A 740A      2547            mov     a,#0x0A
0D7C 9590      2548            subb    a,_main_forward_R_1_75
0D7E E4        2549            clr     a
0D7F 9591      2550            subb    a,(_main_forward_R_1_75 + 1)
0D81 5001      2551            jnc     L014049?
0D83           2552   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:369: forward_R = 10;
0D83 75900A    2553            mov     _main_forward_R_1_75,#0x0A
0D86 E4        2554            clr     a
0D87 F591      2555            mov     (_main_forward_R_1_75 + 1),a
0D89           2556   L014049?:
0D89           2557   ;        C:\Users\Grant\Documents\UBC\Year 2\Elec291\Project 2\Transmitter_Code.c:370: sendMessage(backward_L,backward_R,forward_L,forward_R);
0D89 85F0D0    2558            mov     _sendMessage_PARM_2,_main_backward_R_1_75
0D8C 85F1D1    2559            mov     (_sendMessage_PARM_2 + 1),(_main_backward_R_1_75 + 1)
0D8F 854080    2560            mov     _sendMessage_PARM_3,_main_forward_L_1_75
0D92 854181    2561            mov     (_sendMessage_PARM_3 + 1),(_main_forward_L_1_75 + 1)
0D95 859030    2562            mov     _sendMessage_PARM_4,_main_forward_R_1_75
0D98 859131    2563            mov     (_sendMessage_PARM_4 + 1),(_main_forward_R_1_75 + 1)
0D9B 85A082    2564            mov     dpl,_main_backward_L_1_75
0D9E 85A183    2565            mov     dph,(_main_backward_L_1_75 + 1)
0DA1 120100    2566            lcall   _sendMessage
0DA4 020100    2567            ljmp    L014051?
0DA7           2568            rseg R_CSEG
0DA7           2569   
0000           2570            rseg R_XINIT
0000           2571   
0000           2572            rseg R_CONST
0000           2573   
002E           2574            CSEG
002E           2575   
002E           2576   end
